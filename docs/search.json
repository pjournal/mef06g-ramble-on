[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ramble On’s Progress Journal",
    "section": "",
    "text": "This progress journal covers Ramble On’s work during their term at BDA 503 Fall 2022.\nEach section is an assignment or an individual work.\n\n\n\nArzu Alpan\n\nDoğanbarış Gündoğan\nEce Acaroğlu\nGizem Çınar\nTayyip Sinan Ocaktan"
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "1  Turkish Startups in 2021",
    "section": "",
    "text": "The top 3 start-ups with the highest investments in 2021 are:\n\ntrendyol\nGetir\nhepsiburada\n\n85% of the investments is shared between these companies in 2021.\n\n\nThe top 3 sectors with the highest investments in 2021 are:\n\nEcommerce Enabler\nDelivery & Logistics\nGaming\n\nThe sector with the highest median investment is:\n\nTelecom\n\nThe sector with the highest mean investment is:\n\nEcommerce Enabler\n\nThe gaming sector has the highest standard deviation compared to its mean. It is also the sector with the highest company amount which has an effect on the variation."
  },
  {
    "objectID": "assignment1.html#data-pre-processing",
    "href": "assignment1.html#data-pre-processing",
    "title": "1  Turkish Startups in 2021",
    "section": "1.1 Data Pre-Processing",
    "text": "1.1 Data Pre-Processing\nTo be able to take a look at the data set, the necessary libraries and data should be imported first.\n\n\nCode\n# install.packages(\"readxl\")\n# install.package(kni)\nlibrary(readxl)\nlibrary(knitr)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(scales)\ndf <- readxl::read_excel(\"assignment1/startup_deals_2021.xlsx\")\n\n\nThe problematic characters in the column names are removed to make accessing the columns easier. Then we can get a “glimpse” of our data.\n\n\nCode\nnames(df) <- gsub(\"%\", \"\", names(df))\nnames(df) <- gsub(\" \", \"_\", names(df))\nnames(df) <- gsub(\"[()]\", \"\", names(df))\nglimpse(df)\n\n\nRows: 297\nColumns: 9\n$ Target_Company      <chr> \"Abonesepeti\", \"Abrakadabra\", \"Ace Games\", \"Adlema…\n$ Sector              <chr> \"SaaS\", \"Gaming\", \"Gaming\", \"Internet of things\", …\n$ Investor            <chr> \"Keiretsu Forum, Berkan Burla\", \"WePlay Ventures\",…\n$ Announcement_Date   <chr> \"June 2021\", \"December 2021\", \"April 2021\", \"June …\n$ Financial_Investor  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"…\n$ `Investor's_Origin` <chr> \"Turkey\", \"Turkey\", \"Turkey, USA\", \"Turkey\", \"Turk…\n$ Stake_              <chr> \"5.00%\", \"5.00%\", \"NA\", \"NA\", \"NA\", \"NA\", \"10.92%\"…\n$ Deal_Value_USD      <chr> \"100000\", \"250000\", \"NA\", \"120000\", \"100000\", \"100…\n$ Investment_Stage    <chr> \"Seed Stage\", \"Seed Stage\", \"Seed Stage\", \"Seed St…\n\n\nIt can be seen that the “Stake_” and “Deal_Value_USD” columns appear as strings. That’s not good for business. If we don’t fix this problem, we won’t be able to use our numerical data correctly and get false results.\nLet’s start with the “Deal_Value_USD” column. suppressWarnings used to avoid the warnings for the NaN values.\n\n\nCode\ndf$\"Deal_Value_USD\"<- suppressWarnings(as.integer(df$\"Deal_Value_USD\"))\n\n\nIt gets a bit cumbersome when it comes to the “Stake_” column. If we were to change it like we did for the first column, we would get NaNs for the values. We can check the values in the column to investigate this problem.\n\n\nCode\ntable(df[\"Stake_\"])\n\n\nStake_\n  0.46%   1.33%  10.00%  10.42%  10.65% 10.71 % 10.91 %  10.92% 100.00%  11.00% \n      1       1      12       1       1       1       1       1      12       2 \n 11.03% 11.11 %  11.55%  12.00%  12.50% 12.61 %  14.06%  14.28%  14.29%  14.30% \n      1       1       1       1       4       1       1       1       2       1 \n 14.60% 14.71 % 14.91 %  15.00%  15.38%  15.49%  15.50%  15.60%  15.79%  16.13% \n      1       1       1       1       1       1       1       1       1       2 \n  1750%  18.66%  19.99%   2.00%  2.21 %   2.59%  20.00%  20.83%  22.00%  22.73% \n      1       1       1       2       1       1       7       1       1       1 \n 23.50%  24.29%  25.00%  25.23%  28.00%   3.33%   3.38%   3.63%  30.00%  33.33% \n      1       1       2       1       1       2       1       1       1       1 \n 35.00%  35.09%  37.50%  37.70%   4.00%   4.44%   4.75%   5.00%   5.20%   5.67% \n      1       1       1       1       1       1       1      10       1       1 \n 5.81 %   5.88%   5.90%  50.00%   6.00%   6.25%   6.34%  6.51 %   6.60%  60.00% \n      1       2       1       3       2       1       1       1       1       4 \n 69.82%   7.00%   7.14%   7.39%   7.50%   7.69%  75.00%   8.05%   8.08%   8.33% \n      1       1       1       1       1       1       1       1       1       1 \n  8.47%   8.70%  88.89%   9.39%   9.40%  9.91 %      NA \n      2       1       1       1       1       1     157 \n\n\n“%” characters and the white space in some of the cells cause problems. They are removed, and the type is changed. The warnings are suppressed again.\n\n\nCode\ndf$\"Stake_\"<- gsub(\"%\",\"\", df$\"Stake_\") %>% trimws(df$\"Stake_\", which = c(\"both\")) %>% as.numeric(df$\"Stake_\")\nglimpse(df)\n\n\nRows: 297\nColumns: 9\n$ Target_Company      <chr> \"Abonesepeti\", \"Abrakadabra\", \"Ace Games\", \"Adlema…\n$ Sector              <chr> \"SaaS\", \"Gaming\", \"Gaming\", \"Internet of things\", …\n$ Investor            <chr> \"Keiretsu Forum, Berkan Burla\", \"WePlay Ventures\",…\n$ Announcement_Date   <chr> \"June 2021\", \"December 2021\", \"April 2021\", \"June …\n$ Financial_Investor  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"…\n$ `Investor's_Origin` <chr> \"Turkey\", \"Turkey\", \"Turkey, USA\", \"Turkey\", \"Turk…\n$ Stake_              <dbl> 5.00, 5.00, NA, NA, NA, NA, 10.92, NA, NA, 15.38, …\n$ Deal_Value_USD      <int> 100000, 250000, NA, 120000, 100000, 1000000, 25000…\n$ Investment_Stage    <chr> \"Seed Stage\", \"Seed Stage\", \"Seed Stage\", \"Seed St…"
  },
  {
    "objectID": "assignment1.html#value-by-company",
    "href": "assignment1.html#value-by-company",
    "title": "1  Turkish Startups in 2021",
    "section": "1.2 Value by Company",
    "text": "1.2 Value by Company\nThe amount of investment received by companies can be examined as the first analysis. To do so, we should group the data set by company name and sum the deal values. We can also keep their sector information to observe the distribution.\nAdding or removing sectors when grouping by company should not change the row count because a company’s sector should be the same in every record. Yet if we try that, we get different results, which means that there is something wrong in the sector column. Let’s take a closer look.\n\n\nCode\ntable(df[\"Sector\"])\n\n\nSector\n            3D Printing      Advanced materials             Advertising \n                      3                       1                       2 \n               Agritech Artificial intelligence Artificial Intelligence \n                      8                      11                       3 \n      Augmented Reality            Aviationtech             B lockchain \n                      2                       1                       4 \n                Biotech                    Book          Cybersec urity \n                      6                       1                       1 \n          Cybersecurity          Data analytics          Data Analytics \n                      4                       2                       1 \n               Deeptech    Delivery & Logistics      Diğital Comparison \n                     11                      13                       1 \n      Ecommerce enabler       Ecommerce Enabler               Education \n                      8                       1                       6 \n                 Energy                 Fintech                Foodtech \n                      3                      23                       9 \n                 Gaming              Healthtech                  HRTech \n                     51                      14                       6 \n         I mage process      Internet of things           Marketingtech \n                      1                       5                       6 \n            Marketplace                   Media                Mobility \n                     17                      12                       8 \n               Proptech                Research              Retailtech \n                      1                       1                       3 \n               Robotics                    SaaS                  Sports \n                      3                      28                       5 \n                Telecom                 Telecpm          Transportation \n                      3                       1                       1 \n                 Travel              Visiontech  Vitamins & Supplements \n                      4                       1                       1 \n\n\nTypos, lower- and upper-case sensitivities, etc. disrupt the pattern. There are also records that show a company in two different sectors. In a larger set, we could remove the whitespace, make every single one of the records lowercase, perform a fuzzy search or similar things, and solve the majority of the problems. But this data set is small enough to make manual adjustments. Let’s change them.\n\n\nCode\ndf$Sector[df$Sector == \"Artificial intelligence\"] <- \"Artificial Intelligence\"\ndf$Sector[df$Sector == \"B lockchain\"] <- \"Blockchain\"\ndf$Sector[df$Sector == \"Cybersec urity\"] <- \"Cybersecurity\"\ndf$Sector[df$Sector == \"Data analytics\"] <- \"Data Analytics\"\ndf$Sector[df$Sector == \"Diğital Comparison\"] <- \"Digital Comparison\"\ndf$Sector[df$Sector == \"Ecommerce enabler\"] <- \"Ecommerce Enabler\"\ndf$Sector[df$Sector == \"I mage process\"] <- \"Image Process\"\ndf$Sector[df$Sector == \"Internet of things\"] <- \"Internet of Things\"\ndf$Sector[df$Sector == \"Telecpm\"] <- \"Telecom\"\n\ndf$Sector[df$Target_Company == \"ART Labs\"] <- \"Artificial Intelligence\"\ndf$Sector[df$Target_Company == \"Juphy\"] <- \"SaaS\"\n\n\nNow we are ready to get our new dataframe.\n\n\nCode\nsuppressMessages(comp_grouped <- df %>%\n  group_by(Target_Company, Sector) %>%\n  summarize(Deal_Value_USD = sum(Deal_Value_USD, na.rm=T))%>%\n  arrange(desc(Deal_Value_USD)))\n\nkable(head(comp_grouped, 10))\n\n\n\n\n\nTarget_Company\nSector\nDeal_Value_USD\n\n\n\n\ntrendyol\nEcommerce Enabler\n1435000000\n\n\nGetir\nDelivery & Logistics\n1018000000\n\n\nhepsiburada\nEcommerce Enabler\n761481000\n\n\nDream Games\nGaming\n155000050\n\n\nLibra Softworks\nGaming\n30000000\n\n\nProta\nSaaS\n30000000\n\n\nBluTV\nMedia\n20800000\n\n\nArvento\nSaaS\n20565000\n\n\nAkinon\nEcommerce Enabler\n20000000\n\n\nBiotrend Energy\nEnergy\n20000000\n\n\n\n\n\nWe can also visualize these companies and compare them.\nVisualizing so many companies will make the plot unreadable. We can just select the top 5% and feed them to our plot.\nWe first calculate the value for the filter, then add it to the code, and then we sort the bars according to the values. Next, we insert the elements of the plot. Note that the y axis is in millions.\n\n\nCode\nqu <- quantile(comp_grouped$Deal_Value_USD, probs = 0.95, na.rm = TRUE)\n\ncomp_grouped %>% filter(Deal_Value_USD >= qu) %>%\n  ggplot(aes(x = reorder(Target_Company, +Deal_Value_USD),y = Deal_Value_USD, \n             fill = Sector))+ scale_fill_brewer(palette=\"Set3\") +\n  geom_col(width = 0.5) + theme(axis.text.x = element_text(angle = 45, hjust=1)) + \n  ggtitle(\"Total Investments by Company\") +\n  xlab(\"Company\") + ylab(\"Deal Value in USD (Millions)\") + \n  scale_y_continuous(labels = label_number(suffix = \" M\", scale = 1e-6))\n\n\n\n\n\nThree companies that are arguably similar lead the way, with significant differences between their closest competitors. Despite being in the same sector, hepsiburada and trendyol are both in the top 3, which emphasize the share of the Ecommerce sector."
  },
  {
    "objectID": "assignment1.html#value-by-sector",
    "href": "assignment1.html#value-by-sector",
    "title": "1  Turkish Startups in 2021",
    "section": "1.3 Value by Sector",
    "text": "1.3 Value by Sector\nWhen it comes to sectors, we can work on similar calculations.\nA group by function will be needed again. To see more information, we will also include the number of companies in the sector.\n\n\nCode\nsum_deal = sum(df$Deal_Value_USD, na.rm = T)\n\nsec_grouped <- df %>%\n  group_by(Sector) %>%\n  summarize(Deal_Value_USD = sum(Deal_Value_USD, na.rm=T), Amount_of_Company = n_distinct(Target_Company))%>%\n  arrange(desc(Deal_Value_USD)) %>%\n  mutate(Investment_Percentage = round(Deal_Value_USD*100 / sum_deal, 2))\n\nkable(head(sec_grouped, 10))\n\n\n\n\n\n\n\n\n\n\n\nSector\nDeal_Value_USD\nAmount_of_Company\nInvestment_Percentage\n\n\n\n\nEcommerce Enabler\n2221235634\n8\n58.78\n\n\nDelivery & Logistics\n1027811561\n10\n27.20\n\n\nGaming\n221235284\n50\n5.85\n\n\nSaaS\n84157048\n26\n2.23\n\n\nFintech\n28894578\n23\n0.76\n\n\nMarketplace\n26477315\n15\n0.70\n\n\nMobility\n25905560\n8\n0.69\n\n\nMedia\n21759000\n10\n0.58\n\n\nEnergy\n21608314\n3\n0.57\n\n\nDeeptech\n16357491\n10\n0.43\n\n\n\n\n\nEcommerce Enabler companies got more than half of the investments, even when there were only eight of them! Great, let’s start a company called “hepsiburalarda” and be done with it, right? right? Well, not quite."
  },
  {
    "objectID": "assignment1.html#distribution-within-sectors",
    "href": "assignment1.html#distribution-within-sectors",
    "title": "1  Turkish Startups in 2021",
    "section": "1.4 Distribution within Sectors",
    "text": "1.4 Distribution within Sectors\nWe should investigate how these investments are distributed among companies and collect descriptive statistics on them. There is a plot for such tasks: the boxplot. But almost every sector has its own extreme outliers, and if we were to plot these, we would have to filter several sectors for a readable graph.\n\n\nCode\nfiltered_df <- df %>% \n  filter(!Sector %in% c(\"Ecommerce Enabler\", \"Delivery & Logistics\", \"Gaming\",\n                        \"SaaS\", \"Fintech\", \"Marketplace\", \"Mobility\", \"Media\",\n                        \"Energy\", \"Telecom\", \"Deeptech\", \"Education\",\n                        \"Agritech\", \"Proptech\", \"Vitamins & Supplements\",\n                        \"Foodtech\", \"Healthtech\"))\n  \nggplot(filtered_df, aes(x=Sector, y=Deal_Value_USD)) + \n  geom_boxplot() +  scale_y_continuous(labels = label_number(suffix = \" M\", scale = 1e-6)) + theme(axis.text.x = element_text(angle = 45, hjust=1))\n\n\n\n\n\nSo, the boxplot did not come to our aid this time. We will calculate the descriptive statistics instead. Sectors with only one sample are excluded.\n\n\nCode\nsummed_df <- df %>%                    \n  group_by(Sector) %>% \n  summarize(Mean = mean(Deal_Value_USD, na.rm =TRUE),\n            Median = median(Deal_Value_USD, na.rm =TRUE),\n            Standard_Dev = sd(Deal_Value_USD, na.rm =TRUE),\n            Min = min(Deal_Value_USD, na.rm =TRUE),\n            Quantile1 = quantile(Deal_Value_USD, 0.25, na.rm =TRUE),\n            Quantile3 = quantile(Deal_Value_USD, 0.75, na.rm =TRUE),\n            Max = max(Deal_Value_USD,na.rm =TRUE),\n            Amount_of_Company = n_distinct(Target_Company)) %>%\n  \n  filter(,!is.na(Standard_Dev)) %>%\n  mutate(Coefficient_of_Variation = Standard_Dev / Mean) %>%\n  arrange(desc(Median))\n\nkable(head(summed_df))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSector\nMean\nMedian\nStandard_Dev\nMin\nQuantile1\nQuantile3\nMax\nAmount_of_Company\nCoefficient_of_Variation\n\n\n\n\nTelecom\n3085875.0\n1546750\n4303515.8\n50000\n82625.0\n4550000\n9.200e+06\n4\n1.3945853\n\n\nEnergy\n7202771.3\n1400000\n11098730.8\n208314\n804157.0\n10700000\n2.000e+07\n3\n1.5408973\n\n\nEcommerce Enabler\n246803959.3\n1103361\n511282193.7\n50000\n376800.0\n20000000\n1.435e+09\n8\n2.0716126\n\n\nDelivery & Logistics\n79062427.8\n1000000\n166933603.5\n55000\n365264.0\n35000000\n5.550e+08\n10\n2.1114151\n\n\nMobility\n3700794.3\n1000000\n5707703.7\n139400\n383080.0\n4000000\n1.600e+07\n8\n1.5422915\n\n\nRobotics\n807422.3\n900000\n683584.4\n82267\n491133.5\n1170000\n1.440e+06\n3\n0.8466256\n\n\n\n\n\nThis was the final step of our EDA. We ran fundamental analyses on such an exciting data set."
  },
  {
    "objectID": "Preprocessing.html",
    "href": "Preprocessing.html",
    "title": "2  Preprocessing the Data",
    "section": "",
    "text": "There are 4 data sets that are used in the project. These are called;\n\nNumber of Departing Visitors by Country of Residence\nForeign and Citizen Visitors by Purpose of Visit\nTourism Income, Expenditure and Average Number of Nights\nTourism Income, Number of Visitors and Average Expenditure per Capita by Months\n\nThey will be processed before any calculations or visualizations to avoid possible errors/mistakes and to be used more effectively.\nThe data sets contain multiple headers, column names that are written in 2 languages and other explanations that has no place in a data frame. There could be missing values, symbols and false data types in the data. They will be examined and fixed as well.\nProcessing will start with importing the necessary libraries.\n\n\nCode\nlibrary(readxl)\nlibrary(knitr)\nlibrary(dplyr)\nlibrary(tidyr)\n# install.packages(\"writexl\")\nlibrary(writexl)"
  },
  {
    "objectID": "Preprocessing.html#visitors_by_country",
    "href": "Preprocessing.html#visitors_by_country",
    "title": "2  Preprocessing the Data",
    "section": "2.1 Number of Departing Visitors by Country of Residence",
    "text": "2.1 Number of Departing Visitors by Country of Residence\n\n\nCode\ndep <- readxl::read_excel(\"term_project/Number of Departing Visitors by Country of Residence.xls\", skip = 4)\nglimpse(dep)\n\n\nRows: 47\nColumns: 11\n$ Nationality <chr> \"A.B.D. - USA\", \"Almanya - Germany\", \"Avusturya - Austria\"…\n$ `2012`      <dbl> 883408, 7305228, 832019, 663758, 838895, 2643699, 1514894,…\n$ `2013`      <dbl> 856728, 7378650, 916069, 715578, 859199, 2738368, 1640259,…\n$ `2014`      <dbl> 888077, 7794762, 802133, 726078, 809843, 2818021, 1701021,…\n$ `2015`      <dbl> 833850, 8402180, 836755, 650569, 814868, 2776057, 1826947,…\n$ `2016`      <dbl> 505989, 6960545, 677284, 656685, 627223, 1957576, 1710276,…\n$ `2017`      <dbl> 331239, 7117716, 578074, 792883, 651702, 1951637, 1854683,…\n$ `2018`      <dbl> 468281, 8022883, 620002, 916429, 751660, 2575768, 2387679,…\n$ `2019`      <dbl> 626298, 8861124, 652020, 933291, 755681, 2978764, 2719962,…\n$ `2020(1)`   <dbl> 148914, 2903189, 238682, 250087, 219196, 1122967, 1190803,…\n$ `2021`      <dbl> 365211, 6314266, 516081, 512215, 459091, 473681, 1339552, …\n\n\nFirst 4 rows are skipped to get the proper header. Similar process will take place to exclude the descriptions at the bottom of the data frame.\n\n\nCode\ndep <- head(dep, - 15) \n\n\nSecond problem seems to be in the “Nationality” column. The countries were written in two different languages. They have a dash between them which can be used to exclude one of the languages. ” - ” string will be fed to the separate function to get rid off the white spaces as well.\n\n\nCode\ndep <- dep %>%\n  separate(Nationality, c(NA,\"Nationality\"),\" - \")\n\n\nThere is the “(1)” character in the column for the year 2020 which is a note that says the column only contains data for the first, third and last quarter of the year due to the lack of surveys(COVID-19).\nIt will be removed from the column name.\n\n\nCode\nnames(dep)[names(dep) == \"2020(1)\"] <- \"2020\"\nkable(head(dep, 3))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNationality\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n\n\n\n\nUSA\n883408\n856728\n888077\n833850\n505989\n331239\n468281\n626298\n148914\n365211\n\n\nGermany\n7305228\n7378650\n7794762\n8402180\n6960545\n7117716\n8022883\n8861124\n2903189\n6314266\n\n\nAustria\n832019\n916069\n802133\n836755\n677284\n578074\n620002\n652020\n238682\n516081\n\n\n\n\n\nLastly, data type for the year columns should be integers. Lack of warnings will also reveal if there are empty cells. The data frame is saved as an excel file.\n\n\nCode\ndep <- dep %>%\n    mutate(across(\"2012\":\"2021\", as.integer))\nwrite_xlsx(dep,\"term_project/depart_by_residence.xlsx\")\nglimpse(dep)\n\n\nRows: 32\nColumns: 11\n$ Nationality <chr> \"USA\", \"Germany\", \"Austria\", \"Azerbaijan\", \"Belgium\", \"Uni…\n$ `2012`      <int> 883408, 7305228, 832019, 663758, 838895, 2643699, 1514894,…\n$ `2013`      <int> 856728, 7378650, 916069, 715578, 859199, 2738368, 1640259,…\n$ `2014`      <int> 888077, 7794762, 802133, 726078, 809843, 2818021, 1701021,…\n$ `2015`      <int> 833850, 8402180, 836755, 650569, 814868, 2776057, 1826947,…\n$ `2016`      <int> 505989, 6960545, 677284, 656685, 627223, 1957576, 1710276,…\n$ `2017`      <int> 331239, 7117716, 578074, 792883, 651702, 1951637, 1854683,…\n$ `2018`      <int> 468281, 8022883, 620002, 916429, 751660, 2575768, 2387679,…\n$ `2019`      <int> 626298, 8861124, 652020, 933291, 755681, 2978764, 2719962,…\n$ `2020`      <int> 148914, 2903189, 238682, 250087, 219196, 1122967, 1190803,…\n$ `2021`      <int> 365211, 6314266, 516081, 512215, 459091, 473681, 1339552, …"
  },
  {
    "objectID": "Preprocessing.html#purpose_of_visit",
    "href": "Preprocessing.html#purpose_of_visit",
    "title": "2  Preprocessing the Data",
    "section": "2.2 Foreign and Citizen Visitors by Purpose of Visit",
    "text": "2.2 Foreign and Citizen Visitors by Purpose of Visit\nSecond data set will be processed. Similar manipulations with the previous chapter will not be explained in detail to offer a better readability. Impracticable rows are excluded again.\nThis time, column names will be checked first. Only 5 column names are shown.\n\n\nCode\npurp <- readxl::read_excel(\"term_project/Foreign and Citizen Visitors by Purpose of Visit (Foreigner and Citizens Resident Abroad).xls\", skip = 5)\npurp <- head(purp, -9)\ncolnames(purp)[1:5]\n\n\n[1] \"Yıl\"                                                                                                        \n[2] \"Çeyrek\"                                                                                                     \n[3] \"Toplam \\nTotal...3\"                                                                                         \n[4] \"Gezi, eğlence, sportif ve kültürel faaliyetler \\nTravel, entertainment, sportive or cultural activities...4\"\n[5] \"Akraba ve arkadaş ziyareti \\nVisiting relatives and friends...5\"                                            \n\n\nThese column names seem chaotic enough to confuse the user. There are several things that can be done.\nFirst of all, they are named in two languages again. Most of them are separated with the new line indicator “\\n”. Year and quarter columns are duplicated in two languages, duplicates will be dropped.\nIn this chunk, everything before “\\n” character is dropped if there is one, duplicated columns are dropped, some of the other characters are dropped and spaces are replaced with “_“.\n\n\nCode\nnames(purp)[3:23] <- sub(\".*?\\n\", \"\", names(purp)[3:23])\nnames(purp) <- gsub(r\"{\\s*\\([^\\)]+\\)}\",\"\",names(purp))\nnames(purp) <- trimws(names(purp), \"l\")\nnames(purp) <- gsub(\" / \", \"_\", names(purp))\nnames(purp) <- gsub(\" \", \"_\", names(purp))\nnames(purp)[3:7] <- substr(names(purp)[3:7],1,nchar(names(purp)[3:7])-4)\nnames(purp)[8:23] <- substr(names(purp)[8:23],1,nchar(names(purp)[8:23])-5)\nnames(purp) <- gsub(\",\", \"\", names(purp))\npurp <- subset(purp, select = -c(Yıl,Çeyrek))\npurp <- purp[,-11]\nnames(purp)[1:5]\n\n\n[1] \"Total\"                                               \n[2] \"Travel_entertainment_sportive_or_cultural_activities\"\n[3] \"Visiting_relatives_and_friends\"                      \n[4] \"Education_training\"                                  \n[5] \"Health_or_medical_reasons\"                           \n\n\nThere are still duplicated column names yet they have different values. First columns represent the value for all of the tourists while others represent the values for Turkish citizens who live abroad. They can be distinguished with prefixes.\n\n\nCode\nnames(purp)[1:10] <- paste0(\"ALL_\", names(purp)[1:10])\nnames(purp)[11:20] <- paste0(\"TR_\", names(purp)[11:20])\npurp <- purp %>% select(Year, Quarter, ALL_Total:TR_Other)\nglimpse(purp)\n\n\nRows: 54\nColumns: 22\n$ Year                                                     <dbl> 2012, NA, NA,…\n$ Quarter                                                  <chr> \"Annual\", \"I\"…\n$ ALL_Total                                                <chr> \"36463921.041…\n$ ALL_Travel_entertainment_sportive_or_cultural_activities <chr> \"24953961\", \"…\n$ ALL_Visiting_relatives_and_friends                       <chr> \"6792033\", \"1…\n$ ALL_Education_training                                   <chr> \"231152\", \"51…\n$ ALL_Health_or_medical_reasons                            <chr> \"240682\", \"63…\n$ ALL_Religion_Pilgrimag                                   <chr> \"73510\", \"112…\n$ ALL_Shoppin                                              <chr> \"934204\", \"14…\n$ ALL_Transit                                              <chr> \"45194\", \"161…\n$ ALL_Business                                             <chr> \"2224844\", \"5…\n$ ALL_Other                                                <chr> \"968339\", \"22…\n$ TR_Total                                                 <chr> \"5121457\", \"8…\n$ TR_Travel_entertainment_sportive_or_cultural_activities  <chr> \"1083976\", \"1…\n$ TR_Visiting_relatives_and_friends                        <chr> \"3645145\", \"5…\n$ TR_Education_training                                    <chr> \"21768\", \"621…\n$ TR_Health_or_medical_reasons                             <chr> \"67151\", \"239…\n$ TR_Religion_Pilgrimage                                   <chr> \"5973\", \"1775…\n$ TR_Shopping                                              <chr> \"26330\", \"931…\n$ TR_Transit                                               <chr> \"-\", \"-\", \"-\"…\n$ TR_Business                                              <chr> \"244774\", \"68…\n$ TR_Other                                                 <chr> \"26340\", \"399…\n\n\nCode\nkable(head(purp))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYear\nQuarter\nALL_Total\nALL_Travel_entertainment_sportive_or_cultural_activities\nALL_Visiting_relatives_and_friends\nALL_Education_training\nALL_Health_or_medical_reasons\nALL_Religion_Pilgrimag\nALL_Shoppin\nALL_Transit\nALL_Business\nALL_Other\nTR_Total\nTR_Travel_entertainment_sportive_or_cultural_activities\nTR_Visiting_relatives_and_friends\nTR_Education_training\nTR_Health_or_medical_reasons\nTR_Religion_Pilgrimage\nTR_Shopping\nTR_Transit\nTR_Business\nTR_Other\n\n\n\n\n2012\nAnnual\n36463921.041000001\n24953961\n6792033\n231152\n240682\n73510\n934204\n45194\n2224844\n968339\n5121457\n1083976\n3645145\n21768\n67151\n5973\n26330\n-\n244774\n26340\n\n\nNA\nI\n4219162\n2005504\n1168263\n51489\n63843\n11203\n148181\n16131\n532073\n222474\n844430\n130458\n599931\n6212\n23962\n1775\n9318\n-\n68779\n3994\n\n\nNA\nII\n9323459\n6752489\n1189394\n88929\n58283\n28866\n244106\n10525\n654678\n296190\n911152\n199092\n586250\n7134\n16861\n649\n9079\n-\n81063\n11025\n\n\nNA\nIII\n15437123\n11439809\n3072660\n43643\n44905\n14690\n204199\n13743\n353468\n250005\n2276006\n499200\n1722066\n5164\n8951\n1377\n4131\n-\n26509\n8607\n\n\nNA\nIV\n7484177\n4756160\n1361716\n47091\n73652\n18751\n337718\n4795\n684625\n199669\n1089869\n255226\n736898\n3258\n17377\n2172\n3801\n-\n68422\n2715\n\n\n2013\nAnnual\n39226225.794699997\n26817201\n7239397\n195918\n300102\n62762\n1000734\n41172\n2404344\n1164596\n5398751.7854000004\n1322033\n3655078\n20330\n90579\n4681\n39986\n-\n255493\n10571\n\n\n\n\n\nThere are still problems with the data. It can be seen that years are partially empty which should be repeated after first instances. There are problems in the data types as well. Lastly, Transit column for Turkish citizens is filled with dashes, it would be more efficient to simply keep them as zeros.\nNone values in the Year column are filled below.\n\n\nCode\npurp <- purp %>% fill(Year)\n\n\nTransit column is filled with zeros.\n\n\nCode\npurp$TR_Transit <- 0\n\n\nAnnual values for 2022 are empty and the values were filled with dashes for the second quarter of the year 2020 as explained before. There are other instances of dashes in the data set as well. They will be filled with zeros.\n\n\nCode\nkable(filter(purp, rowSums(is.na(purp)) > 0 | (Year == 2020 & Quarter == \"II\")))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYear\nQuarter\nALL_Total\nALL_Travel_entertainment_sportive_or_cultural_activities\nALL_Visiting_relatives_and_friends\nALL_Education_training\nALL_Health_or_medical_reasons\nALL_Religion_Pilgrimag\nALL_Shoppin\nALL_Transit\nALL_Business\nALL_Other\nTR_Total\nTR_Travel_entertainment_sportive_or_cultural_activities\nTR_Visiting_relatives_and_friends\nTR_Education_training\nTR_Health_or_medical_reasons\nTR_Religion_Pilgrimage\nTR_Shopping\nTR_Transit\nTR_Business\nTR_Other\n\n\n\n\n2020\nII\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n0\n-\n-\n\n\n2022\nAnnual\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\nNA\nNA\n\n\n\n\n\n\n\nCode\npurp <- data.frame(lapply(purp, gsub, pattern = \"-\", replacement = 0))\npurp[is.na(purp)] <- 0\n\n\nLastly, the columns are ready to be assigned by their correct types and the data is ready to be exported.\n\n\nCode\npurp[,-2] <- sapply(purp[,-2],as.integer)\nwrite_xlsx(purp,\"term_project/purposes.xlsx\")\nglimpse(purp)\n\n\nRows: 54\nColumns: 22\n$ Year                                                     <int> 2012, 2012, 2…\n$ Quarter                                                  <chr> \"Annual\", \"I\"…\n$ ALL_Total                                                <int> 36463921, 421…\n$ ALL_Travel_entertainment_sportive_or_cultural_activities <int> 24953961, 200…\n$ ALL_Visiting_relatives_and_friends                       <int> 6792033, 1168…\n$ ALL_Education_training                                   <int> 231152, 51489…\n$ ALL_Health_or_medical_reasons                            <int> 240682, 63843…\n$ ALL_Religion_Pilgrimag                                   <int> 73510, 11203,…\n$ ALL_Shoppin                                              <int> 934204, 14818…\n$ ALL_Transit                                              <int> 45194, 16131,…\n$ ALL_Business                                             <int> 2224844, 5320…\n$ ALL_Other                                                <int> 968339, 22247…\n$ TR_Total                                                 <int> 5121457, 8444…\n$ TR_Travel_entertainment_sportive_or_cultural_activities  <int> 1083976, 1304…\n$ TR_Visiting_relatives_and_friends                        <int> 3645145, 5999…\n$ TR_Education_training                                    <int> 21768, 6212, …\n$ TR_Health_or_medical_reasons                             <int> 67151, 23962,…\n$ TR_Religion_Pilgrimage                                   <int> 5973, 1775, 6…\n$ TR_Shopping                                              <int> 26330, 9318, …\n$ TR_Transit                                               <int> 0, 0, 0, 0, 0…\n$ TR_Business                                              <int> 244774, 68779…\n$ TR_Other                                                 <int> 26340, 3994, …"
  },
  {
    "objectID": "Preprocessing.html#income_nights",
    "href": "Preprocessing.html#income_nights",
    "title": "2  Preprocessing the Data",
    "section": "2.3 Tourism Income, Expenditure and Average Number of Nights",
    "text": "2.3 Tourism Income, Expenditure and Average Number of Nights\nThis data set is quite similar to the previous one.\n\n\nCode\nnight <- readxl::read_excel(\"term_project/Tourism Income, Expenditure and Average Number of Nights.xls\", skip = 4)\nnight <- head(night, -9)\ncolnames(night)\n\n\n [1] \"Yıl\\nYear\"                                                                                                                \n [2] \"Yıllık-Annual\\nÇeyrek-Quarter\"                                                                                            \n [3] \"Turizm  geliri\\nTourism income\\n( 000 $)\"                                                                                 \n [4] \"Ziyaretçi sayısı\\nNumber of departing \\nvisitors\"                                                                         \n [5] \"Kişi başı ortalama \\nharcama\\nAverage expenditure per capita\\n($)...5\"                                                    \n [6] \"Ortalama geceleme sayısı \\nAverage number of overnights...6\"                                                              \n [7] \"...7\"                                                                                                                     \n [8] \"Turizm  gideri\\nTourism expenditure\\n( 000 $)\"                                                                            \n [9] \"\\nTürkiye'de ikamet eden yurt dışını ziyaret eden vatandaş sayısı\\nNumber of citizens (resident in Turkey) visited abroad\"\n[10] \"Kişi başı ortalama \\nharcama\\nAverage expenditure per capita\\n($)...10\"                                                   \n[11] \"Ortalama geceleme sayısı \\nAverage number of overnights...11\"                                                             \n\n\nThe usual suspects could be eliminated with similar methods. Yet these column names have so much individual problems in such small amount that it will be shorter to change most of them manually.\n\n\nCode\nnight <- night[,-7]\nnames(night) <- sub(\".*?\\n\", \"\", names(night))\ncolnames(night)[2] <- \"Quarter\"\ncolnames(night)[3] <- \"Tourism_Income_in_ThousandDollars\"\ncolnames(night)[4] <- \"Number_of_Departing_Visitors\"\ncolnames(night)[5] <- \"ALL_Average_expenditure_per_capita_in_Dollars\"\ncolnames(night)[6] <- \"ALL_Average_number_of_overnights\"\ncolnames(night)[7] <- \"Tourism_expenditure_in_ThousandDollars\"\ncolnames(night)[8] <- \"Number_of_Turkish_citizens_visited_abroad\"\ncolnames(night)[9] <- \"TR_Average_expenditure_per_capita_in_Dollars\"\ncolnames(night)[10] <- \"TR_Average_number_of_overnights\"\n\nnames(night)\n\n\n [1] \"Year\"                                         \n [2] \"Quarter\"                                      \n [3] \"Tourism_Income_in_ThousandDollars\"            \n [4] \"Number_of_Departing_Visitors\"                 \n [5] \"ALL_Average_expenditure_per_capita_in_Dollars\"\n [6] \"ALL_Average_number_of_overnights\"             \n [7] \"Tourism_expenditure_in_ThousandDollars\"       \n [8] \"Number_of_Turkish_citizens_visited_abroad\"    \n [9] \"TR_Average_expenditure_per_capita_in_Dollars\" \n[10] \"TR_Average_number_of_overnights\"              \n\n\nCurrent status of the data frame:\n\n\nCode\nkable(tail(night))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYear\nQuarter\nTourism_Income_in_ThousandDollars\nNumber_of_Departing_Visitors\nALL_Average_expenditure_per_capita_in_Dollars\nALL_Average_number_of_overnights\nTourism_expenditure_in_ThousandDollars\nNumber_of_Turkish_citizens_visited_abroad\nTR_Average_expenditure_per_capita_in_Dollars\nTR_Average_number_of_overnights\n\n\n\n\nNA\nIII\n14126732\n13640672.334207579\n1035.6331193861683\n11.36096473622375\n584378.93482789095\n873026.66579242004\n669.37123197430367\n18.717043940553779\n\n\nNA\nIV\n9306804\n9050112.2298819609\n1028.3634228612639\n13.23171319647536\n696183.34344183875\n1188802.7701180396\n585.61719482930937\n16.496943017713928\n\n\n2022\nYıllık-Annual\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNA\nI\n6561011\n6451656.9355938099\n1016.949711910887\n12.455328498538254\n664989.01667372952\n1039666.0644061896\n639.61789216765612\n17.470795565958081\n\n\nNA\nII\n10515168\n11939130.535165597\n880.73147956867979\n9.440213100360511\n1057787.2055852062\n1666135.4648344023\n634.87467130431673\n16.310156750210435\n\n\nNA\nIII\n17952361\n21000127.519801684\n854.8691370122466\n9.7038686869594368\n1106285.4788077581\n2072116.4801983174\n533.89154971726202\n9.8233256160661639\n\n\n\n\n\nNull values in the year column are filled again.\n\n\nCode\nnight <- night %>% fill(Year)\n\n\nSome of the cells contain two languages. They are changed.\n\n\nCode\nnight$Quarter[night$Quarter == \"Yıllık-Annual\"] <- \"Anual\"\n\n\nNext, null values and dashes are filled with zeros.\n\n\nCode\nnight <- data.frame(lapply(night, gsub, pattern = \"-\", replacement = 0))\nnight[is.na(night)] <- 0\n\n\nLastly, data types are changed and the data frame is exported.\n\n\nCode\nnight[,-2] <- sapply(night[,-2],as.numeric)\nnight[, 1] <- sapply(night[,1],as.integer)\nnight[, 4] <- sapply(night[,4],as.integer)\nnight[, 8] <- sapply(night[,8],as.integer)\n\nwrite_xlsx(night,\"term_project/income_nights.xlsx\")\n\nkable(head(night))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYear\nQuarter\nTourism_Income_in_ThousandDollars\nNumber_of_Departing_Visitors\nALL_Average_expenditure_per_capita_in_Dollars\nALL_Average_number_of_overnights\nTourism_expenditure_in_ThousandDollars\nNumber_of_Turkish_citizens_visited_abroad\nTR_Average_expenditure_per_capita_in_Dollars\nTR_Average_number_of_overnights\n\n\n\n\n2012\nAnual\n29689249\n36463921\n814.2089\n10.820622\n4593390\n5802949\n791.5612\n12.500000\n\n\n2013\nAnual\n33073502\n39226225\n843.1477\n10.203777\n5253565\n7525869\n698.0675\n13.085486\n\n\n2014\nAnual\n35137949\n41415070\n848.4339\n9.986969\n5470481\n7982263\n685.3295\n12.901660\n\n\n2015\nAnual\n32492212\n41617530\n780.7338\n10.065018\n5698423\n8750851\n651.1850\n11.942026\n\n\n2016\nAnual\n22839468\n31365329\n728.1756\n11.353400\n5049793\n7891909\n639.8697\n10.997575\n\n\n2017\nAnual\n27044542\n38620345\n700.2667\n10.864540\n5137244\n8886916\n578.0681\n9.872048"
  },
  {
    "objectID": "Preprocessing.html#income_capita",
    "href": "Preprocessing.html#income_capita",
    "title": "2  Preprocessing the Data",
    "section": "2.4 Tourism Income, Number of Visitors and Average Expenditure per Capita by Months",
    "text": "2.4 Tourism Income, Number of Visitors and Average Expenditure per Capita by Months\nThis data set has two headers, the first one shows the years which is not included here.\n\n\nCode\nmon <- readxl::read_excel(\"term_project/Tourism income, number of visitors and average expenditure per capita by months.xls\", skip = 4)\nmon <- head(mon, -9)\ncolnames(mon)[1:7]\n\n\n[1] \"Aylar - Months\"                                                          \n[2] \"Turizm geliri Tourism\\nincome\\n(000 $)...2\"                              \n[3] \"Ziyaretçi\\nsayısı\\nNumber of\\nvisitors...3\"                              \n[4] \"Kişi başı \\nortalama\\nharcama\\nAverage\\nexpenditure\\nper capita\\n($)...4\"\n[5] \"Turizm geliri Tourism\\nincome\\n(000 $)...5\"                              \n[6] \"Ziyaretçi\\nsayısı\\nNumber of\\nvisitors...6\"                              \n[7] \"Kişi başı \\nortalama\\nharcama\\nAverage\\nexpenditure\\nper capita\\n($)...7\"\n\n\nColumn names are edited again.\n\n\nCode\nnames(mon)[1] <- \"Months\"\nnames(mon)[c(2,5,8,11,14,17,20,23,26,29,32)] <- \"Tourism_Income_in_ThousandDollars\"\nnames(mon)[c(3,6,9,12,15,18,21,24,27,30,33)] <- \"Number_of_Visitors\"\nnames(mon)[c(4,7,10,13,16,19,22,25,28,31,34)] <- \"Average_expenditure_per_capita\"\n\nnames(mon)[2:4] <- paste0(names(mon)[2:4], \"_2012\")\nnames(mon)[5:7] <- paste0(names(mon)[5:7], \"_2013\")\nnames(mon)[8:10] <- paste0(names(mon)[8:10], \"_2014\")\nnames(mon)[11:13] <- paste0(names(mon)[11:13], \"_2015\")\nnames(mon)[14:16] <- paste0(names(mon)[14:16], \"_2016\")\nnames(mon)[17:19] <- paste0(names(mon)[17:19], \"_2017\")\nnames(mon)[20:22] <- paste0(names(mon)[20:22], \"_2018\")\nnames(mon)[23:25] <- paste0(names(mon)[23:25], \"_2019\")\nnames(mon)[26:28] <- paste0(names(mon)[26:28], \"_2020\")\nnames(mon)[29:31] <- paste0(names(mon)[29:31], \"_2021\")\nnames(mon)[32:34] <- paste0(names(mon)[32:34], \"_2022\")\n\nnames(mon)[1:7]\n\n\n[1] \"Months\"                                \n[2] \"Tourism_Income_in_ThousandDollars_2012\"\n[3] \"Number_of_Visitors_2012\"               \n[4] \"Average_expenditure_per_capita_2012\"   \n[5] \"Tourism_Income_in_ThousandDollars_2013\"\n[6] \"Number_of_Visitors_2013\"               \n[7] \"Average_expenditure_per_capita_2013\"   \n\n\nMonths column is changed.\n\n\nCode\nmon <- mon %>%\n  separate(Months, c(NA,\"Months\"),\" - \")\n\n\nDashes and null values are filled with zeros.\n\n\nCode\nmon <- data.frame(lapply(mon, gsub, pattern = \"-\", replacement = 0))\nmon[is.na(mon)] <- 0\n\n\nLastly, data types are changed and the data frame is exported.\n\n\nCode\nmon[,-1] <- sapply(mon[,-1],as.numeric)\nmon[,grepl(\"Number_of_Visitors\",names(mon))]<-sapply(mon[,grepl(\"Number_of_Visitors\", names(mon))],as.integer)\n\n\nwrite_xlsx(mon,\"term_project/income_months.xlsx\")\n\nkable(head(mon))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMonths\nTourism_Income_in_ThousandDollars_2012\nNumber_of_Visitors_2012\nAverage_expenditure_per_capita_2012\nTourism_Income_in_ThousandDollars_2013\nNumber_of_Visitors_2013\nAverage_expenditure_per_capita_2013\nTourism_Income_in_ThousandDollars_2014\nNumber_of_Visitors_2014\nAverage_expenditure_per_capita_2014\nTourism_Income_in_ThousandDollars_2015\nNumber_of_Visitors_2015\nAverage_expenditure_per_capita_2015\nTourism_Income_in_ThousandDollars_2016\nNumber_of_Visitors_2016\nAverage_expenditure_per_capita_2016\nTourism_Income_in_ThousandDollars_2017\nNumber_of_Visitors_2017\nAverage_expenditure_per_capita_2017\nTourism_Income_in_ThousandDollars_2018\nNumber_of_Visitors_2018\nAverage_expenditure_per_capita_2018\nTourism_Income_in_ThousandDollars_2019\nNumber_of_Visitors_2019\nAverage_expenditure_per_capita_2019\nTourism_Income_in_ThousandDollars_2020\nNumber_of_Visitors_2020\nAverage_expenditure_per_capita_2020\nTourism_Income_in_ThousandDollars_2021\nNumber_of_Visitors_2021\nAverage_expenditure_per_capita_2021\nTourism_Income_in_ThousandDollars_2022\nNumber_of_Visitors_2022\nAverage_expenditure_per_capita_2022\n\n\n\n\nTotal\n29689249\n36463920\n814.2089\n33073502\n39226225\n843.1477\n35137949\n41415070\n848.4339\n32492212\n41617530\n780.7338\n22839468\n31365329\n728.1756\n27044542\n38620345\n700.2667\n30545924\n45628672\n669.4458\n38930474\n51860042\n750.6834\n14817273.3\n15826266\n936.2457\n30173587.5\n29357463\n1027.7995\n0\n0\n0.0000\n\n\nJanuary\n1143894\n1374400\n832.2854\n1469297\n1466127\n1002.1615\n1540396\n1575399\n977.7813\n1666096\n1762004\n945.5687\n1442336\n1691287\n852.8040\n1168279\n1568343\n744.9123\n1537993\n2045340\n751.9495\n1755674\n2226287\n788.6106\n2085858.3\n2529422\n824.6380\n854474.5\n829931\n1029.5719\n2259265\n2158066\n1046.8934\n\n\nFebruary\n1052891\n1209064\n870.8315\n1401129\n1415328\n989.9672\n1461263\n1523244\n959.3096\n1462829\n1564925\n934.7592\n1214408\n1517503\n800.2669\n1013689\n1432341\n707.7149\n1324531\n1806821\n733.0722\n1505062\n1944956\n773.8280\n1682608.0\n2051922\n820.0153\n722423.9\n727125\n993.5335\n1870892\n1851394\n1010.5316\n\n\nMarch\n1375023\n1635696\n840.6349\n1837104\n1892369\n970.7956\n1869525\n1967114\n950.3896\n1861352\n2017645\n922.5370\n1497145\n1898762\n788.4848\n1260527\n1844076\n683.5546\n1641208\n2270019\n722.9929\n1865797\n2473146\n754.4225\n895925.7\n1058067\n846.7564\n1059070.8\n1043410\n1015.0086\n2430853\n2442196\n995.3553\n\n\nApril\n1763753\n2231942\n790.2322\n2004636\n2418962\n828.7172\n2158634\n2573138\n838.9108\n1923638\n2626663\n732.3503\n1394602\n2049238\n680.5466\n1415774\n2278537\n621.3523\n1873123\n2870568\n652.5267\n2287216\n3266255\n700.2564\n175638.2\n0\n0.0000\n1198135.0\n1179561\n1015.7460\n2525296\n2921440\n864.4012\n\n\nMay\n2466505\n3194546\n772.0985\n3074218\n3717734\n826.9064\n3229089\n3863882\n835.7109\n2806667\n3775012\n743.4854\n1895207\n2749648\n689.2543\n1965730\n3095281\n635.0730\n2506235\n3790524\n661.1842\n3024127\n4219837\n716.6453\n196363.2\n0\n0.0000\n1035085.8\n1025559\n1009.2889\n3611055\n4078424\n885.4043\n\n\n\n\n\nThis was the final step of the processing. Data sets are ready to be explored."
  },
  {
    "objectID": "Exploratory Data Analysis.html",
    "href": "Exploratory Data Analysis.html",
    "title": "3  Exploratory Data Analysis",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nCode\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "Exploratory Data Analysis.html#section",
    "href": "Exploratory Data Analysis.html#section",
    "title": "3  Exploratory Data Analysis",
    "section": "3.2 ",
    "text": "3.2 \nWe are going to analyze the changes of touristic activities according to pandemic. As we mention in our project proposal we are going to make this analysis with scope of spending behaviors, nationality changes and why tourists came to Turkey."
  },
  {
    "objectID": "Exploratory Data Analysis.html#spending-behavior-analysis",
    "href": "Exploratory Data Analysis.html#spending-behavior-analysis",
    "title": "3  Exploratory Data Analysis",
    "section": "3.3 Spending Behavior Analysis",
    "text": "3.3 Spending Behavior Analysis\nFirst we are going to analysis the change in spending behavior. For this analysis we are going to use datasets income_nights and income_months. Income_nights show the spending analysis according to total and average expenditure and how long did tourists stay in Turkey. Income_months datasest shows that total expenditure, income of tourists and number of visitors month by month. Both dataset starts with 2012 and finish at 2022 third quarter.\n\n\nCode\nlibrary(readxl)\nincome_nights <- read_excel(\"term_project/income_nights.xlsx\")\nincome_months <- read_excel(\"term_project/income_months.xlsx\")\n\nincome_n1 <- filter(income_nights, Quarter %in% c(\"Anual\"))\n\nggplot(income_n1, aes(Year)) + \n  geom_line(aes(y = Tourism_expenditure_in_ThousandDollars, colour = \"Tourism expenditure in ThousandDollars\")) + \n  geom_line(aes(y = Tourism_Income_in_ThousandDollars, colour = \"Tourism Income in ThousandDollars\"))\n\n\n\n\n\nAs we see from this graphic although the total income increases over the years, we can see that the expenditures of the tourists coming to Turkey do not exceed a certain limit.\n\n\n\nWhen we look at the month-based expenditure graph of the year the pandemic first appeared - 2020 - and the number of people arriving, the decrease in the period of bans can be seen very critically. In the data set we have, the number of visitors in the months covering the second quarter of 2020 was entered as 0, which also reveals the travel bans of that period."
  },
  {
    "objectID": "Exploratory Data Analysis.html#nationatilty-changes",
    "href": "Exploratory Data Analysis.html#nationatilty-changes",
    "title": "3  Exploratory Data Analysis",
    "section": "3.4 Nationatilty Changes",
    "text": "3.4 Nationatilty Changes\nIn this section we will analyze the changes in nationality visit to Turkey as a tourist. With this analysis, we will try to analyze whether there is a difference before and after the pandemic? For this analysis we are going to use depart_by_residence dataset.\n\n\nCode\nnationality <- read_excel(\"term_project/depart_by_residence.xlsx\")"
  },
  {
    "objectID": "Exploratory Data Analysis.html#reasons-to-come",
    "href": "Exploratory Data Analysis.html#reasons-to-come",
    "title": "3  Exploratory Data Analysis",
    "section": "3.5 Reasons to come",
    "text": "3.5 Reasons to come\nIn this section we will analyze the reasons to come Turkey as a turist how change in years. With respect to pandemic effect we can say that\nHealth or Medical Reasons vs Total Touristic Activities;\n\n\nCode\nreasons_to_come <- read_excel(\"term_project/purposes.xlsx\")\n\nreasons_1 <- filter(reasons_to_come, Quarter %in% \"Annual\")\n\n\nggplot(reasons_1, aes(Year)) + \n  geom_line(aes(y = ALL_Total, colour = \"Total Touristic Activities\")) + \n  geom_line(aes(y = ALL_Health_or_medical_reasons, colour = \"Health or Medical Reasons\"))\n\n\n\n\n\nAs we can see there is no difference in health or medical purpose in total touristic activities over the years. In the above we will examine same analysis for all purposes. And later we will come to outcome\nCultural Activities vs. Total Turistic Activities;\n\n\nCode\nggplot(reasons_1, aes(Year)) + \n  geom_line(aes(y = ALL_Total, colour = \"Total Touristic Activities\")) + \n  geom_line(aes(y = ALL_Travel_entertainment_sportive_or_cultural_activities, colour = \"Cultural Activites\"))\n\n\n\n\n\nFamily and Friends Visiting vs. Total Turistic Activities\n\n\nCode\nggplot(reasons_1, aes(Year)) + \n  geom_line(aes(y = ALL_Total, colour = \"Total Touristic Activities\")) + \n  geom_line(aes(y = ALL_Visiting_relatives_and_friends, colour = \"Family and Friends Visiting\"))\n\n\n\n\n\nEducation Purpose vs. Total Turistic Activities\n\n\nCode\nggplot(reasons_1, aes(Year)) + \n  geom_line(aes(y = ALL_Total, colour = \"Total Touristic Activities\")) + \n  geom_line(aes(y = ALL_Education_training, colour = \"Education Purpose\"))\n\n\n\n\n\nReligion Purposes vs. Total Turistic Activities;\n\n\nCode\nggplot(reasons_1, aes(Year)) + \n  geom_line(aes(y = ALL_Total, colour = \"Total Touristic Activities\")) + \n  geom_line(aes(y = ALL_Religion_Pilgrimag, colour = \"Religion Purposes\"))\n\n\n\n\n\nShopping Purposes vs. Total Turistic Activities\n\n\nCode\nggplot(reasons_1, aes(Year)) + \n  geom_line(aes(y = ALL_Total, colour = \"Total Touristic Activities\")) + \n  geom_line(aes(y = ALL_Shoppin, colour = \"Shopping Purposes\"))\n\n\n\n\n\nBusiness Purposes vs. Total Turistic Activities\n\n\nCode\nggplot(reasons_1, aes(Year)) + \n  geom_line(aes(y = ALL_Total, colour = \"Total Touristic Activities\")) + \n  geom_line(aes(y = ALL_Business, colour = \"Business Purposes\"))\n\n\n\n\n\nOther Reasons vs. Total Turistic Activities\n\n\nCode\nggplot(reasons_1, aes(Year)) + \n  geom_line(aes(y = ALL_Total, colour = \"Total Touristic Activities\")) + \n  geom_line(aes(y = ALL_Other, colour = \"Other Reasons\"))\n\n\n\n\n\nAfter examine all the reasons vs total turistic activities we can see that after 2020 - whis is the start of pandemic - total visitors came to Turkey is much more little than other years. Also we can clearly see the cultural activities visiting whic include sportive, entertainment and cultural activities constitutes a very large part of the total visit. Second in row is family and friend visiting for all touristic activities."
  }
]