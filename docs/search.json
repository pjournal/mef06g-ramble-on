[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ramble On’s Progress Journal",
    "section": "",
    "text": "This progress journal covers Ramble On’s work during their term at BDA 503 Fall 2022.\nEach section is an assignment or an individual work.\n\n\n\nArzu Alpan\n\nDoğanbarış Gündoğan\nEce Acaroğlu\nGizem Çınar\nTayyip Sinan Ocaktan"
  },
  {
    "objectID": "assignment1.html#data-pre-processing",
    "href": "assignment1.html#data-pre-processing",
    "title": "1  Turkish Startups in 2021",
    "section": "1.1 Data Pre-Processing",
    "text": "1.1 Data Pre-Processing\nTo be able to take a look at the data set, the necessary libraries and data should be imported first.\n\n\nCode\n# install.packages(\"readxl\")\n# install.package(kni)\nlibrary(readxl)\nlibrary(knitr)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(scales)\ndf <- readxl::read_excel(\"assignment1/startup_deals_2021.xlsx\")\n\n\nThe problematic characters in the column names are removed to make accessing the columns easier. Then we can get a “glimpse” of our data.\n\n\nCode\nnames(df) <- gsub(\"%\", \"\", names(df))\nnames(df) <- gsub(\" \", \"_\", names(df))\nnames(df) <- gsub(\"[()]\", \"\", names(df))\nglimpse(df)\n\n\nRows: 297\nColumns: 9\n$ Target_Company      <chr> \"Abonesepeti\", \"Abrakadabra\", \"Ace Games\", \"Adlema…\n$ Sector              <chr> \"SaaS\", \"Gaming\", \"Gaming\", \"Internet of things\", …\n$ Investor            <chr> \"Keiretsu Forum, Berkan Burla\", \"WePlay Ventures\",…\n$ Announcement_Date   <chr> \"June 2021\", \"December 2021\", \"April 2021\", \"June …\n$ Financial_Investor  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"…\n$ `Investor's_Origin` <chr> \"Turkey\", \"Turkey\", \"Turkey, USA\", \"Turkey\", \"Turk…\n$ Stake_              <chr> \"5.00%\", \"5.00%\", \"NA\", \"NA\", \"NA\", \"NA\", \"10.92%\"…\n$ Deal_Value_USD      <chr> \"100000\", \"250000\", \"NA\", \"120000\", \"100000\", \"100…\n$ Investment_Stage    <chr> \"Seed Stage\", \"Seed Stage\", \"Seed Stage\", \"Seed St…\n\n\nIt can be seen that the “Stake_” and “Deal_Value_USD” columns appear as strings. That’s not good for business. If we don’t fix this problem, we won’t be able to use our numerical data correctly and get false results.\nLet’s start with the “Deal_Value_USD” column. suppressWarnings used to avoid the warnings for the NaN values.\n\n\nCode\ndf$\"Deal_Value_USD\"<- suppressWarnings(as.integer(df$\"Deal_Value_USD\"))\n\n\nIt gets a bit cumbersome when it comes to the “Stake_” column. If we were to change it like we did for the first column, we would get NaNs for the values. We can check the values in the column to investigate this problem.\n\n\nCode\ntable(df[\"Stake_\"])\n\n\nStake_\n  0.46%   1.33%  10.00%  10.42%  10.65% 10.71 % 10.91 %  10.92% 100.00%  11.00% \n      1       1      12       1       1       1       1       1      12       2 \n 11.03% 11.11 %  11.55%  12.00%  12.50% 12.61 %  14.06%  14.28%  14.29%  14.30% \n      1       1       1       1       4       1       1       1       2       1 \n 14.60% 14.71 % 14.91 %  15.00%  15.38%  15.49%  15.50%  15.60%  15.79%  16.13% \n      1       1       1       1       1       1       1       1       1       2 \n  1750%  18.66%  19.99%   2.00%  2.21 %   2.59%  20.00%  20.83%  22.00%  22.73% \n      1       1       1       2       1       1       7       1       1       1 \n 23.50%  24.29%  25.00%  25.23%  28.00%   3.33%   3.38%   3.63%  30.00%  33.33% \n      1       1       2       1       1       2       1       1       1       1 \n 35.00%  35.09%  37.50%  37.70%   4.00%   4.44%   4.75%   5.00%   5.20%   5.67% \n      1       1       1       1       1       1       1      10       1       1 \n 5.81 %   5.88%   5.90%  50.00%   6.00%   6.25%   6.34%  6.51 %   6.60%  60.00% \n      1       2       1       3       2       1       1       1       1       4 \n 69.82%   7.00%   7.14%   7.39%   7.50%   7.69%  75.00%   8.05%   8.08%   8.33% \n      1       1       1       1       1       1       1       1       1       1 \n  8.47%   8.70%  88.89%   9.39%   9.40%  9.91 %      NA \n      2       1       1       1       1       1     157 \n\n\n“%” characters and the white space in some of the cells cause problems. They are removed, and the type is changed. The warnings are suppressed again.\n\n\nCode\ndf$\"Stake_\"<- gsub(\"%\",\"\", df$\"Stake_\") %>% trimws(df$\"Stake_\", which = c(\"both\")) %>% as.numeric(df$\"Stake_\")\nglimpse(df)\n\n\nRows: 297\nColumns: 9\n$ Target_Company      <chr> \"Abonesepeti\", \"Abrakadabra\", \"Ace Games\", \"Adlema…\n$ Sector              <chr> \"SaaS\", \"Gaming\", \"Gaming\", \"Internet of things\", …\n$ Investor            <chr> \"Keiretsu Forum, Berkan Burla\", \"WePlay Ventures\",…\n$ Announcement_Date   <chr> \"June 2021\", \"December 2021\", \"April 2021\", \"June …\n$ Financial_Investor  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"…\n$ `Investor's_Origin` <chr> \"Turkey\", \"Turkey\", \"Turkey, USA\", \"Turkey\", \"Turk…\n$ Stake_              <dbl> 5.00, 5.00, NA, NA, NA, NA, 10.92, NA, NA, 15.38, …\n$ Deal_Value_USD      <int> 100000, 250000, NA, 120000, 100000, 1000000, 25000…\n$ Investment_Stage    <chr> \"Seed Stage\", \"Seed Stage\", \"Seed Stage\", \"Seed St…"
  },
  {
    "objectID": "assignment1.html#value-by-company",
    "href": "assignment1.html#value-by-company",
    "title": "1  Turkish Startups in 2021",
    "section": "1.2 Value by Company",
    "text": "1.2 Value by Company\nThe amount of investment received by companies can be examined as the first analysis. To do so, we should group the data set by company name and sum the deal values. We can also keep their sector information to observe the distribution.\nAdding or removing sectors when grouping by company should not change the row count because a company’s sector should be the same in every record. Yet if we try that, we get different results, which means that there is something wrong in the sector column. Let’s take a closer look.\n\n\nCode\ntable(df[\"Sector\"])\n\n\nSector\n            3D Printing      Advanced materials             Advertising \n                      3                       1                       2 \n               Agritech Artificial intelligence Artificial Intelligence \n                      8                      11                       3 \n      Augmented Reality            Aviationtech             B lockchain \n                      2                       1                       4 \n                Biotech                    Book          Cybersec urity \n                      6                       1                       1 \n          Cybersecurity          Data analytics          Data Analytics \n                      4                       2                       1 \n               Deeptech    Delivery & Logistics      Diğital Comparison \n                     11                      13                       1 \n      Ecommerce enabler       Ecommerce Enabler               Education \n                      8                       1                       6 \n                 Energy                 Fintech                Foodtech \n                      3                      23                       9 \n                 Gaming              Healthtech                  HRTech \n                     51                      14                       6 \n         I mage process      Internet of things           Marketingtech \n                      1                       5                       6 \n            Marketplace                   Media                Mobility \n                     17                      12                       8 \n               Proptech                Research              Retailtech \n                      1                       1                       3 \n               Robotics                    SaaS                  Sports \n                      3                      28                       5 \n                Telecom                 Telecpm          Transportation \n                      3                       1                       1 \n                 Travel              Visiontech  Vitamins & Supplements \n                      4                       1                       1 \n\n\nTypos, lower- and upper-case sensitivities, etc. disrupt the pattern. There are also records that show a company in two different sectors. In a larger set, we could remove the whitespace, make every single one of the records lowercase, perform a fuzzy search or similar things, and solve the majority of the problems. But this data set is small enough to make manual adjustments. Let’s change them.\n\n\nCode\ndf$Sector[df$Sector == \"Artificial intelligence\"] <- \"Artificial Intelligence\"\ndf$Sector[df$Sector == \"B lockchain\"] <- \"Blockchain\"\ndf$Sector[df$Sector == \"Cybersec urity\"] <- \"Cybersecurity\"\ndf$Sector[df$Sector == \"Data analytics\"] <- \"Data Analytics\"\ndf$Sector[df$Sector == \"Diğital Comparison\"] <- \"Digital Comparison\"\ndf$Sector[df$Sector == \"Ecommerce enabler\"] <- \"Ecommerce Enabler\"\ndf$Sector[df$Sector == \"I mage process\"] <- \"Image Process\"\ndf$Sector[df$Sector == \"Internet of things\"] <- \"Internet of Things\"\ndf$Sector[df$Sector == \"Telecpm\"] <- \"Telecom\"\n\ndf$Sector[df$Target_Company == \"ART Labs\"] <- \"Artificial Intelligence\"\ndf$Sector[df$Target_Company == \"Juphy\"] <- \"SaaS\"\n\n\nNow we are ready to get our new dataframe.\n\n\nCode\nsuppressMessages(comp_grouped <- df %>%\n  group_by(Target_Company, Sector) %>%\n  summarize(Deal_Value_USD = sum(Deal_Value_USD, na.rm=T))%>%\n  arrange(desc(Deal_Value_USD)))\n\nkable(head(comp_grouped, 10))\n\n\n\n\n\nTarget_Company\nSector\nDeal_Value_USD\n\n\n\n\ntrendyol\nEcommerce Enabler\n1435000000\n\n\nGetir\nDelivery & Logistics\n1018000000\n\n\nhepsiburada\nEcommerce Enabler\n761481000\n\n\nDream Games\nGaming\n155000050\n\n\nLibra Softworks\nGaming\n30000000\n\n\nProta\nSaaS\n30000000\n\n\nBluTV\nMedia\n20800000\n\n\nArvento\nSaaS\n20565000\n\n\nAkinon\nEcommerce Enabler\n20000000\n\n\nBiotrend Energy\nEnergy\n20000000\n\n\n\n\n\nWe can also visualize these companies and compare them.\nVisualizing so many companies will make the plot unreadable. We can just select the top 5% and feed them to our plot.\nWe first calculate the value for the filter, then add it to the code, and then we sort the bars according to the values. Next, we insert the elements of the plot. Note that the y axis is in millions.\n\n\nCode\nqu <- quantile(comp_grouped$Deal_Value_USD, probs = 0.95, na.rm = TRUE)\n\ncomp_grouped %>% filter(Deal_Value_USD >= qu) %>%\n  ggplot(aes(x = reorder(Target_Company, +Deal_Value_USD),y = Deal_Value_USD, \n             fill = Sector))+ scale_fill_brewer(palette=\"Set3\") +\n  geom_col(width = 0.5) + theme(axis.text.x = element_text(angle = 45, hjust=1)) + \n  ggtitle(\"Total Investments by Company\") +\n  xlab(\"Company\") + ylab(\"Deal Value in USD (Millions)\") + \n  scale_y_continuous(labels = label_number(suffix = \" M\", scale = 1e-6))\n\n\n\n\n\nThree companies that are arguably similar lead the way, with significant differences between their closest competitors. Despite being in the same sector, hepsiburada and trendyol are both in the top 3, which emphasize the share of the Ecommerce sector."
  },
  {
    "objectID": "assignment1.html#value-by-sector",
    "href": "assignment1.html#value-by-sector",
    "title": "1  Turkish Startups in 2021",
    "section": "1.3 Value by Sector",
    "text": "1.3 Value by Sector\nWhen it comes to sectors, we can work on similar calculations.\nA group by function will be needed again. To see more information, we will also include the number of companies in the sector.\n\n\nCode\nsum_deal = sum(df$Deal_Value_USD, na.rm = T)\n\nsec_grouped <- df %>%\n  group_by(Sector) %>%\n  summarize(Deal_Value_USD = sum(Deal_Value_USD, na.rm=T), Amount_of_Company = n_distinct(Target_Company))%>%\n  arrange(desc(Deal_Value_USD)) %>%\n  mutate(Investment_Percentage = round(Deal_Value_USD*100 / sum_deal, 2))\n\nkable(head(sec_grouped, 10))\n\n\n\n\n\n\n\n\n\n\n\nSector\nDeal_Value_USD\nAmount_of_Company\nInvestment_Percentage\n\n\n\n\nEcommerce Enabler\n2221235634\n8\n58.78\n\n\nDelivery & Logistics\n1027811561\n10\n27.20\n\n\nGaming\n221235284\n50\n5.85\n\n\nSaaS\n84157048\n26\n2.23\n\n\nFintech\n28894578\n23\n0.76\n\n\nMarketplace\n26477315\n15\n0.70\n\n\nMobility\n25905560\n8\n0.69\n\n\nMedia\n21759000\n10\n0.58\n\n\nEnergy\n21608314\n3\n0.57\n\n\nDeeptech\n16357491\n10\n0.43\n\n\n\n\n\nEcommerce Enabler companies got more than half of the investments, even when there were only eight of them! Great, let’s start a company called “hepsiburalarda” and be done with it, right? right? Well, not quite."
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "1  Turkish Startups in 2021",
    "section": "",
    "text": "The top 3 start-ups with the highest investments in 2021 are:\n\ntrendyol\nGetir\nhepsiburada\n\n85% of the investments is shared between these companies in 2021.\n\n\nThe top 3 sectors with the highest investments in 2021 are:\n\nEcommerce Enabler\nDelivery & Logistics\nGaming\n\nThe sector with the highest median investment is:\n\nTelecom\n\nThe sector with the highest mean investment is:\n\nEcommerce Enabler\n\nThe gaming sector has the highest standard deviation compared to its mean. It is also the sector with the highest company amount which has an effect on the variation."
  },
  {
    "objectID": "assignment1.html#distribution-within-sectors",
    "href": "assignment1.html#distribution-within-sectors",
    "title": "1  Turkish Startups in 2021",
    "section": "1.4 Distribution within Sectors",
    "text": "1.4 Distribution within Sectors\nWe should investigate how these investments are distributed among companies and collect descriptive statistics on them. There is a plot for such tasks: the boxplot. But almost every sector has its own extreme outliers, and if we were to plot these, we would have to filter several sectors for a readable graph.\n\n\nCode\nfiltered_df <- df %>% \n  filter(!Sector %in% c(\"Ecommerce Enabler\", \"Delivery & Logistics\", \"Gaming\",\n                        \"SaaS\", \"Fintech\", \"Marketplace\", \"Mobility\", \"Media\",\n                        \"Energy\", \"Telecom\", \"Deeptech\", \"Education\",\n                        \"Agritech\", \"Proptech\", \"Vitamins & Supplements\",\n                        \"Foodtech\", \"Healthtech\"))\n  \nggplot(filtered_df, aes(x=Sector, y=Deal_Value_USD)) + \n  geom_boxplot() +  scale_y_continuous(labels = label_number(suffix = \" M\", scale = 1e-6)) + theme(axis.text.x = element_text(angle = 45, hjust=1))\n\n\n\n\n\nSo, the boxplot did not come to our aid this time. We will calculate the descriptive statistics instead. Sectors with only one sample are excluded.\n\n\nCode\nsummed_df <- df %>%                    \n  group_by(Sector) %>% \n  summarize(Mean = mean(Deal_Value_USD, na.rm =TRUE),\n            Median = median(Deal_Value_USD, na.rm =TRUE),\n            Standard_Dev = sd(Deal_Value_USD, na.rm =TRUE),\n            Min = min(Deal_Value_USD, na.rm =TRUE),\n            Quantile1 = quantile(Deal_Value_USD, 0.25, na.rm =TRUE),\n            Quantile3 = quantile(Deal_Value_USD, 0.75, na.rm =TRUE),\n            Max = max(Deal_Value_USD,na.rm =TRUE),\n            Amount_of_Company = n_distinct(Target_Company)) %>%\n  \n  filter(,!is.na(Standard_Dev)) %>%\n  mutate(Coefficient_of_Variation = Standard_Dev / Mean) %>%\n  arrange(desc(Median))\n\nkable(head(summed_df))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSector\nMean\nMedian\nStandard_Dev\nMin\nQuantile1\nQuantile3\nMax\nAmount_of_Company\nCoefficient_of_Variation\n\n\n\n\nTelecom\n3085875.0\n1546750\n4303515.8\n50000\n82625.0\n4550000\n9.200e+06\n4\n1.3945853\n\n\nEnergy\n7202771.3\n1400000\n11098730.8\n208314\n804157.0\n10700000\n2.000e+07\n3\n1.5408973\n\n\nEcommerce Enabler\n246803959.3\n1103361\n511282193.7\n50000\n376800.0\n20000000\n1.435e+09\n8\n2.0716126\n\n\nDelivery & Logistics\n79062427.8\n1000000\n166933603.5\n55000\n365264.0\n35000000\n5.550e+08\n10\n2.1114151\n\n\nMobility\n3700794.3\n1000000\n5707703.7\n139400\n383080.0\n4000000\n1.600e+07\n8\n1.5422915\n\n\nRobotics\n807422.3\n900000\n683584.4\n82267\n491133.5\n1170000\n1.440e+06\n3\n0.8466256\n\n\n\n\n\nThis was the final step of our EDA. We ran fundamental analyses on such an exciting data set."
  }
]