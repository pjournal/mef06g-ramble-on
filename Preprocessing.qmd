---
title: "Preprocessing the Data"
date: "`r format(Sys.time(), '%d %B %y')`"
format:
  html:
    code-fold: true
    code-tools: true
---

<style>
body {
  font-family: Calibri;
}
pre {
  color: #708090
}

</style>

## The Data Sets {-}

There are 4 data sets that are used in the project. These are called;

* [Number of Departing Visitors by Country of Residence](#visitors_by_country)

* [Foreign and Citizen Visitors by Purpose of Visit](#purpose_of_visit)

* [Tourism Income, Expenditure and Average Number of Nights](#income_nights)

* [Tourism Income, Number of Visitors and Average Expenditure per Capita by Months](#income_capita)

These data sets were taken from TUIK. TUIK is an official data source that provides data for Turkey in diverse topics. [Link](https://www.tuik.gov.tr/) to their website. Links for the data sets that are used here are in [link1](https://data.tuik.gov.tr/Bulten/DownloadIstatistikselTablo?p=N7O40AWrI5/Vv0kzGXnXCe37dlMXqV1pDlocCKGOBLFcdT3rMensZQNlucedTJBo), [link2](https://data.tuik.gov.tr/Bulten/DownloadIstatistikselTablo?p=rq7teMQGT4tWHfTq7G6NgQ3gWeh4AdROY03HvwqqU5HNayOvmSoEISEpD8VEei3L),
[link3](https://data.tuik.gov.tr/Bulten/DownloadIstatistikselTablo?p=RdTh/zIRI8SkR7eszQAb/fF4hc98DdmiKRs8NMQZIxb8b4pIZS5xXPHQfmwGUX9j) and [link4](https://data.tuik.gov.tr/Bulten/DownloadIstatistikselTablo?p=EdZkC25lxK4s1FVTMo2d7BmGAm0LkKal/5Ol5pSy1oInfQsXoLUmO2cv/Dg21ke5).


They will be processed before any calculations or visualizations to avoid possible errors/mistakes and to be used more effectively.

The data sets contain multiple headers, column names that are written in 2 languages and other explanations that has no place in a data frame. There could be missing values, symbols and false data types in the data. They will be examined and fixed as well.

Processing will start with importing the necessary libraries.

```{r pack, echo=TRUE, message=FALSE}
library(readxl)
library(knitr)
library(dplyr)
library(tidyr)
library(reshape2)
library(writexl)
```

## Number of Departing Visitors by Country of Residence{#visitors_by_country}
```{r depart, echo=TRUE, message=FALSE}
dep <- readxl::read_excel("term_project/Number of Departing Visitors by Country of Residence.xls", skip = 4)
glimpse(dep)
```

First 4 rows are skipped to get the proper header. Similar process will take place to exclude the descriptions at the bottom of the data frame.

```{r , echo=TRUE, message=FALSE}
dep <- head(dep, - 15) 
```



Second problem seems to be in the "Nationality" column. The countries were written in two different languages. They have a dash between them which can be used to exclude one of the languages. " - " string will be fed to the separate function to get rid off the white spaces as well.


```{r , echo=TRUE, message=FALSE}
dep <- dep %>%
  separate(Nationality, c(NA,"Nationality")," - ")

```

There is the "(1)" character in the column for the year 2020 which is a note that says the column only contains data for the first, third and last quarter of the year due to the lack of surveys(COVID-19).

It will be removed from the column name.


```{r , echo=TRUE, message=FALSE}
names(dep)[names(dep) == "2020(1)"] <- "2020"
kable(head(dep, 3))
```
Lastly, data type for the year columns should be integers. Lack of warnings will also reveal if there are empty cells. The data frame is saved as an excel file.

```{r , echo=TRUE, message=FALSE}
dep <- dep %>%
    mutate(across("2012":"2021", as.integer))
write_xlsx(dep,"term_project/depart_by_residence.xlsx")
saveRDS(dep, file = "term_project/depart_by_residence.rds")

melted_dep <- melt(dep, "Nationality")
colnames(melted_dep) <- c('Nationality','Dep_Year','Departing_Visitors')

write_xlsx(melted_dep,"term_project/melted_depart_by_residence.xlsx")
saveRDS(melted_dep, file = "term_project/melted_depart_by_residence.rds")

glimpse(dep)
```


## Foreign and Citizen Visitors by Purpose of Visit{#purpose_of_visit}

Second data set will be processed. Similar manipulations with the previous chapter will not be explained in detail to offer a better readability. Impracticable rows are excluded again.

This time, column names will be checked first. Only 5 column names are shown.

```{r purpose, echo=TRUE, message=FALSE}
purp <- readxl::read_excel("term_project/Foreign and Citizen Visitors by Purpose of Visit (Foreigner and Citizens Resident Abroad).xls", skip = 5)
purp <- head(purp, -9)
colnames(purp)[1:5]
```

These column names seem chaotic enough to confuse the user. There are several things that can be done. 

First of all, they are named in two languages again. Most of them are separated with the new line indicator "`\n`". Year and quarter columns are duplicated in two languages, duplicates will be dropped. 

In this chunk, everything before "`\n`" character is dropped if there is one, duplicated columns are dropped, some of the other characters are dropped and spaces are replaced with "_".

```{r, echo=TRUE, message=FALSE}
names(purp)[3:23] <- sub(".*?\n", "", names(purp)[3:23])
names(purp) <- gsub(r"{\s*\([^\)]+\)}","",names(purp))
names(purp) <- trimws(names(purp), "l")
names(purp) <- gsub(" / ", "_", names(purp))
names(purp) <- gsub(" ", "_", names(purp))
names(purp)[3:7] <- substr(names(purp)[3:7],1,nchar(names(purp)[3:7])-4)
names(purp)[8:23] <- substr(names(purp)[8:23],1,nchar(names(purp)[8:23])-5)
names(purp) <- gsub(",", "", names(purp))
purp <- subset(purp, select = -c(Yıl,Çeyrek))
purp <- purp[,-11]
names(purp)[1:5]
```


There are still duplicated column names yet they have different values. First columns represent the value for all of the tourists while others represent the values for Turkish citizens who live abroad. They can be distinguished with prefixes. 


```{r, echo=TRUE, message=FALSE}
names(purp)[1:10] <- paste0("ALL_", names(purp)[1:10])
names(purp)[11:20] <- paste0("TR_", names(purp)[11:20])
purp <- purp %>% select(Year, Quarter, ALL_Total:TR_Other)
glimpse(purp)
kable(head(purp))
```
There are still problems with the data. It can be seen that years are partially empty which should be repeated after first instances. There are problems in the data types as well. Lastly, Transit column for Turkish citizens is filled with dashes, it would be more efficient to simply keep them as zeros.


None values in the Year column are filled below.
```{r, echo=TRUE, message=FALSE}
purp <- purp %>% fill(Year)
```

Transit column is filled with zeros.
```{r, echo=TRUE, message=FALSE}
purp$TR_Transit <- 0
```


Annual values for 2022 are empty and the values were filled with dashes for the second quarter of the year 2020 as explained before. There are other instances of dashes in the data set as well. They will be filled with zeros.


```{r, echo=TRUE, message=FALSE}
kable(filter(purp, rowSums(is.na(purp)) > 0 | (Year == 2020 & Quarter == "II")))
```

```{r, echo=TRUE, message=FALSE}
purp <- data.frame(lapply(purp, gsub, pattern = "-", replacement = 0))
purp[is.na(purp)] <- 0
```
Lastly, the columns are ready to be assigned by their correct types and the data is ready to be exported.

```{r, echo=TRUE, message=FALSE}
purp[,-2] <- sapply(purp[,-2],as.integer)
write_xlsx(purp,"term_project/purposes.xlsx")
saveRDS(purp, file = "term_project/purposes.rds")
glimpse(purp)
```


## Tourism Income, Expenditure and Average Number of Nights{#income_nights}

This data set is quite similar to the previous one.

```{r income_nights, echo=TRUE, message=FALSE}
night <- readxl::read_excel("term_project/Tourism Income, Expenditure and Average Number of Nights.xls", skip = 4)
night <- head(night, -9)
colnames(night)
```


The usual suspects could be eliminated with similar methods. Yet these column names have so much individual problems in such small amount that it will be shorter to change most of them manually.


```{r, echo=TRUE, message=FALSE}
night <- night[,-7]
names(night) <- sub(".*?\n", "", names(night))
colnames(night)[2] <- "Quarter"
colnames(night)[3] <- "Tourism_Income_in_ThousandDollars"
colnames(night)[4] <- "Number_of_Departing_Visitors"
colnames(night)[5] <- "ALL_Average_expenditure_per_capita_in_Dollars"
colnames(night)[6] <- "ALL_Average_number_of_overnights"
colnames(night)[7] <- "Tourism_expenditure_in_ThousandDollars"
colnames(night)[8] <- "Number_of_Turkish_citizens_visited_abroad"
colnames(night)[9] <- "TR_Average_expenditure_per_capita_in_Dollars"
colnames(night)[10] <- "TR_Average_number_of_overnights"

names(night)
```
Current status of the data frame:
```{r, echo=TRUE, message=FALSE}
kable(tail(night))
```


Null values in the year column are filled again.

```{r, echo=TRUE, message=FALSE}
night <- night %>% fill(Year)
```

Some of the cells contain two languages. They are changed.

```{r, echo=TRUE, message=FALSE}
night$Quarter[night$Quarter == "Yıllık-Annual"] <- "Anual"
```


Next, null values and dashes are filled with zeros.

```{r, echo=TRUE, message=FALSE}
night <- data.frame(lapply(night, gsub, pattern = "-", replacement = 0))
night[is.na(night)] <- 0
```

Lastly, data types are changed and the data frame is exported.

```{r, echo=TRUE, message=FALSE}
night[,-2] <- sapply(night[,-2],as.numeric)
night[, 1] <- sapply(night[,1],as.integer)
night[, 4] <- sapply(night[,4],as.integer)
night[, 8] <- sapply(night[,8],as.integer)

write_xlsx(night,"term_project/income_nights.xlsx")
saveRDS(night, file = "term_project/income_nights.rds")

kable(head(night))
```
## Tourism Income, Number of Visitors and Average Expenditure per Capita by Months{#income_capita}

This data set has two headers, the first one shows the years which is not included here.

```{r income_capita, echo=TRUE, message=FALSE}
mon <- readxl::read_excel("term_project/Tourism income, number of visitors and average expenditure per capita by months.xls", skip = 4)
mon <- head(mon, -9)
colnames(mon)[1:7]
```

Column names are edited again.


```{r, echo=TRUE, message=FALSE}
names(mon)[1] <- "Months"
names(mon)[c(2,5,8,11,14,17,20,23,26,29,32)] <- "Tourism_Income_in_ThousandDollars"
names(mon)[c(3,6,9,12,15,18,21,24,27,30,33)] <- "Number_of_Visitors"
names(mon)[c(4,7,10,13,16,19,22,25,28,31,34)] <- "Average_expenditure_per_capita"

names(mon)[2:4] <- paste0(names(mon)[2:4], "_2012")
names(mon)[5:7] <- paste0(names(mon)[5:7], "_2013")
names(mon)[8:10] <- paste0(names(mon)[8:10], "_2014")
names(mon)[11:13] <- paste0(names(mon)[11:13], "_2015")
names(mon)[14:16] <- paste0(names(mon)[14:16], "_2016")
names(mon)[17:19] <- paste0(names(mon)[17:19], "_2017")
names(mon)[20:22] <- paste0(names(mon)[20:22], "_2018")
names(mon)[23:25] <- paste0(names(mon)[23:25], "_2019")
names(mon)[26:28] <- paste0(names(mon)[26:28], "_2020")
names(mon)[29:31] <- paste0(names(mon)[29:31], "_2021")
names(mon)[32:34] <- paste0(names(mon)[32:34], "_2022")

names(mon)[1:7]
```

Months column is changed.

```{r , echo=TRUE, message=FALSE}
mon <- mon %>%
  separate(Months, c(NA,"Months")," - ")

```

Dashes and null values are filled with zeros.

```{r, echo=TRUE, message=FALSE}
mon <- data.frame(lapply(mon, gsub, pattern = "-", replacement = 0))
mon[is.na(mon)] <- 0
```

Lastly, data types are changed and the data frame is exported.

```{r, echo=TRUE, message=FALSE}
mon[,-1] <- sapply(mon[,-1],as.numeric)
mon[,grepl("Number_of_Visitors",names(mon))]<-sapply(mon[,grepl("Number_of_Visitors", names(mon))],as.integer)


write_xlsx(mon,"term_project/income_months.xlsx")
saveRDS(mon, file = "term_project/income_months.rds")

kable(head(mon))
```

This was the final step of the processing. Data sets are ready to be explored.


