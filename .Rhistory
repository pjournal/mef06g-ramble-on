theme_ipsum() +
theme(
legend.position = "none",
panel.spacing = unit(0, "lines"),
strip.text.x = element_text(size = 5),
plot.title = element_text(size = 12)
) +
facet_wrap(~Nationality, scales = "free_y")
reasons_to_come <- read_excel("term_project/purposes.xlsx")
reasons_quarter <- filter(reasons_to_come, Quarter %in% c("I", "II", "III", "IV"))
ggplot()
reasons_1 <- filter(reasons_to_come, Quarter %in% "Annual")
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Health_or_medical_reasons, colour = "Health or Medical Reasons"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Travel_entertainment_sportive_or_cultural_activities, colour = "Cultural Activites"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Visiting_relatives_and_friends, colour = "Family and Friends Visiting"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Education_training, colour = "Education Purpose"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Religion_Pilgrimag, colour = "Religion Purposes"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Shoppin, colour = "Shopping Purposes"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Business, colour = "Business Purposes"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Other, colour = "Other Reasons"))
reasons_1 <- filter(reasons_to_come, Quarter %in% "Annual")
ggplot(reasons_to_come, aes(x = Year, y= ALL_Total, fill = Quarter)) + geom_bar(stat = "identity", position = "dodge")
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = TR_Total, colour = "TR Total Activities"))
##pie chart - - - -
reasons_2 <- filter(reasons_to_come, Quarter %in% c("I", "II", "III", "IV"))
ggplot(reasons_2, aes(x = Year, y= ALL_Total, fill = Quarter)) + geom_bar(stat = "identity", position = "dodge")
reasons_quarter <- filter(reasons_to_come, Quarter %in% c("I", "II", "III", "IV"))
reasons_2 <- filter(reasons_to_come, Quarter %in% c("I", "II", "III", "IV"))
ggplot(reasons_2, aes(x = Year, y= ALL_Total, fill = Quarter)) + geom_bar(stat = "identity", position = "dodge") +
ggtitle("Total Visitors by Quarter/Year") +
xlab("Year") +
ylab("Total Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
reasons_to_come <- read_excel("term_project/purposes.xlsx")
reasons_2 <- filter(reasons_to_come, Quarter %in% c("I", "II", "III", "IV"))
ggplot(reasons_2, aes(x = Year, y= ALL_Total, fill = Quarter)) + geom_bar(stat = "identity", position = "dodge") +
ggtitle("Total Visitors by Quarter/Year") +
xlab("Year") +
ylab("Total Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
income_m1 <- filter(income_months, Months %in% c("January", "February", "March", "April", "May", "June", "July", "August","September","October","November","December"))
ggplot(income_m1, aes(x= Months, y = Number_of_Visitors_2020, fill= Number_of_Visitors_2020)) +
ggtitle("Number of Departing Visitors by Month in 2020") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_m1, aes(x= Months, y = Number_of_Visitors_2021, fill= Number_of_Visitors_2021)) +
ggtitle("Number of Departing Visitors by Month in 2021") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
income_m2 <- arrange(income_m1, desc(Months))
income_m1 <- filter(income_months, Months %in% c("January", "February", "March", "April", "May", "June", "July", "August","September","October","November","December"))
income_m2 <- arrange(income_m1, desc(Months))
ggplot(income_m2, aes(x= Months, y = Number_of_Visitors_2020, fill= Number_of_Visitors_2020)) +
ggtitle("Number of Departing Visitors by Month in 2020") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_m2, aes(x= Months, y = Number_of_Visitors_2021, fill= Number_of_Visitors_2021)) +
ggtitle("Number of Departing Visitors by Month in 2021") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
income_m1 <- filter(income_months, Months %in% c("January", "February", "March", "April", "May", "June", "July", "August","September","October","November","December"))
income_m2 <- arrange(income_m1, desc(Months))
ggplot(income_m2, aes(x= Months, y = Number_of_Visitors_2020, fill= Number_of_Visitors_2020)) +
ggtitle("Number of Departing Visitors by Month in 2020") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_m2, aes(x= Months, y = Number_of_Visitors_2021, fill= Number_of_Visitors_2021)) +
ggtitle("Number of Departing Visitors by Month in 2021") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
income_m1 <- filter(income_months, Months %in% c("January", "February", "March", "April", "May", "June", "July", "August","September","October","November","December"))
income_m2 <- arrange(income_m1, desc(Months))
ggplot(income_m2, aes(x= Months, y = Number_of_Visitors_2020, fill= Number_of_Visitors_2020)) +
ggtitle("Number of Departing Visitors by Month in 2020") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_m2, aes(x= Months, y = Number_of_Visitors_2021, fill= Number_of_Visitors_2021)) +
ggtitle("Number of Departing Visitors by Month in 2021") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
income_m2
income_m1 <- filter(income_months, Months %in% c("January", "February", "March", "April", "May", "June", "July", "August","September","October","November","December"))
ggplot(income_m1, aes(x= Months, y = Number_of_Visitors_2020, fill= Number_of_Visitors_2020)) +
ggtitle("Number of Departing Visitors by Month in 2020") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_m1, aes(x= Months, y = Number_of_Visitors_2021, fill= Number_of_Visitors_2021)) +
ggtitle("Number of Departing Visitors by Month in 2021") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
income_m1 <- filter(income_months, Months %in% c("January", "February", "March", "April", "May", "June", "July", "August","September","October","November","December"))
ggplot(income_m1, aes(x = Months, y = Number_of_Visitors_2020, fill= Number_of_Visitors_2020)) +
ggtitle("Number of Departing Visitors by Month in 2020") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_m1, aes(x = Months, y = Number_of_Visitors_2021, fill= Number_of_Visitors_2021)) +
ggtitle("Number of Departing Visitors by Month in 2021") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_n1, aes(Year)) +
geom_line(aes(y = Tourism_expenditure_in_ThousandDollars, colour = "Tourism expenditure in Thousand Dollars")) +
geom_line(aes(y = Tourism_Income_in_ThousandDollars, colour = "Tourism Income in Thousand Dollars")) +
ggtitle("Tourism Expenditure vs. Tourism Income") +
xlab("Year") +
ylab("Dolar") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_n1, aes(x = Year, y = Tourism_Income_in_ThousandDollars, fill = Tourism_Income_in_ThousandDollars)) + geom_area()
ggplot(income_n1, aes(Year)) +
geom_line(aes(y = Tourism_expenditure_in_ThousandDollars, colour = "Tourism expenditure in Thousand Dollars")) +
geom_line(aes(y = Tourism_Income_in_ThousandDollars, colour = "Tourism Income in Thousand Dollars")) +
ggtitle("Tourism Expenditure vs. Tourism Income") +
xlab("Year") +
ylab("Dolar") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_n1, aes(x = Year, y = Tourism_Income_in_ThousandDollars)) + geom_area()
ggplot(income_n1, aes(Year)) +
geom_line(aes(y = Tourism_expenditure_in_ThousandDollars, colour = "Tourism expenditure in Thousand Dollars")) +
geom_line(aes(y = Tourism_Income_in_ThousandDollars, colour = "Tourism Income in Thousand Dollars")) +
ggtitle("Tourism Expenditure vs. Tourism Income") +
xlab("Year") +
ylab("Dolar") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape2)
library(plotly)
library(gapminder)
library(scales)
library(hrbrthemes)
library(viridis)
library(readxl)
income_nights <- read_excel("term_project/income_nights.xlsx")
income_months <- read_excel("term_project/income_months.xlsx")
income_n1 <- filter(income_nights, Quarter %in% c("Anual"))
ggplot(income_n1, aes(x = Year, y= Number_of_Departing_Visitors, fill = Number_of_Departing_Visitors, ))+
geom_col(width = 0.5) + theme(axis.text.x = element_text(angle = 50, hjust = 2))+
ggtitle("Number of Departing Visitors by Year") +
xlab("Year") + ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
income_m1 <- filter(income_months, Months %in% c("January", "February", "March", "April", "May", "June", "July", "August","September","October","November","December"))
ggplot(income_m1, aes(x = Months, y = Number_of_Visitors_2020, fill= Number_of_Visitors_2020)) +
ggtitle("Number of Departing Visitors by Month in 2020") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_m1, aes(x = Months, y = Number_of_Visitors_2021, fill= Number_of_Visitors_2021)) +
ggtitle("Number of Departing Visitors by Month in 2021") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_n1, aes(Year)) +
geom_line(aes(y = Tourism_expenditure_in_ThousandDollars, colour = "Tourism expenditure in Thousand Dollars")) +
geom_line(aes(y = Tourism_Income_in_ThousandDollars, colour = "Tourism Income in Thousand Dollars")) +
ggtitle("Tourism Expenditure vs. Tourism Income") +
xlab("Year") +
ylab("Dolar") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
p <- income_n1 %>%
ggplot(aes(Tourism_expenditure_in_ThousandDollars, Tourism_Income_in_ThousandDollars, size = Number_of_Departing_Visitors, color = Year)) +
geom_point() +
theme_bw()+
ggtitle("Tourism Expenditure vs. Tourism Income") +
xlab("Tourism Expenditure in Thousand Dollars") +
ylab("Tourism Income in Thousand Dollars") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6)) +
scale_x_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplotly(p)
residence <- read_excel("term_project/melted_depart_by_residence.xlsx")
ggplot( residence, aes(x = Dep_Year, y = Departing_Visitors, group= Nationality, fill = Nationality)) +
geom_area()+
scale_fill_viridis(discrete = TRUE) +
theme(legend.position = "none") +
ggtitle("Visitor's Nationality over the years") +
xlab("Year") +
ylab("Numver of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6)) +
theme_ipsum() +
theme(
legend.position = "none",
panel.spacing = unit(0, "lines"),
strip.text.x = element_text(size = 5),
plot.title = element_text(size = 12)
) +
facet_wrap(~Nationality, scales = "free_y")
reasons_to_come <- read_excel("term_project/purposes.xlsx")
reasons_2 <- filter(reasons_to_come, Quarter %in% c("I", "II", "III", "IV"))
ggplot(reasons_2, aes(x = Year, y= ALL_Total, fill = Quarter)) + geom_bar(stat = "identity", position = "dodge") +
ggtitle("Total Visitors by Quarter/Year") +
xlab("Year") +
ylab("Total Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
reasons_1 <- filter(reasons_to_come, Quarter %in% "Annual")
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Health_or_medical_reasons, colour = "Health or Medical Reasons"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Travel_entertainment_sportive_or_cultural_activities, colour = "Cultural Activites"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Visiting_relatives_and_friends, colour = "Family and Friends Visiting"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Education_training, colour = "Education Purpose"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Religion_Pilgrimag, colour = "Religion Purposes"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Shoppin, colour = "Shopping Purposes"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Business, colour = "Business Purposes"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Other, colour = "Other Reasons"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = TR_Total, colour = "TR Total Activities"))
##pie chart - - - -
install.packages("wordcloud2")
library(wordcloud2)
wordcloud2(data=residence, size=1.6)
wordcloud2(data=residence&nationality, size=1.6)
residence_2 <- filter(residence, Dep_Year %in% c("2019", "2020" , "2021", "2022" ) )
residence_2 <- filter(residence, Dep_Year %in% c("2019", "2020" , "2021", "2022" ) )
ggplot( residence_2, aes(x = Dep_Year, y = Departing_Visitors, group= Nationality, fill = Nationality)) +
geom_area()+
scale_fill_viridis(discrete = TRUE) +
theme(legend.position = "none") +
ggtitle("Visitor's Nationality over the years") +
xlab("Year") +
ylab("Numver of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6)) +
theme_ipsum() +
theme(
legend.position = "none",
panel.spacing = unit(0, "lines"),
strip.text.x = element_text(size = 5),
plot.title = element_text(size = 12)
) +
facet_wrap(~Nationality, scales = "free_y")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape2)
library(plotly)
library(gapminder)
library(scales)
library(hrbrthemes)
library(viridis)
library(wordcloud2)
library(readxl)
income_nights <- read_excel("term_project/income_nights.xlsx")
income_months <- read_excel("term_project/income_months.xlsx")
income_n1 <- filter(income_nights, Quarter %in% c("Anual"))
ggplot(income_n1, aes(x = Year, y= Number_of_Departing_Visitors, fill = Number_of_Departing_Visitors, ))+
geom_col(width = 0.5) + theme(axis.text.x = element_text(angle = 50, hjust = 2))+
ggtitle("Number of Departing Visitors by Year") +
xlab("Year") + ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
income_m1 <- filter(income_months, Months %in% c("January", "February", "March", "April", "May", "June", "July", "August","September","October","November","December"))
ggplot(income_m1, aes(x = Months, y = Number_of_Visitors_2020, fill= Number_of_Visitors_2020)) +
ggtitle("Number of Departing Visitors by Month in 2020") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_m1, aes(x = Months, y = Number_of_Visitors_2021, fill= Number_of_Visitors_2021)) +
ggtitle("Number of Departing Visitors by Month in 2021") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_n1, aes(Year)) +
geom_line(aes(y = Tourism_expenditure_in_ThousandDollars, colour = "Tourism expenditure in Thousand Dollars")) +
geom_line(aes(y = Tourism_Income_in_ThousandDollars, colour = "Tourism Income in Thousand Dollars")) +
ggtitle("Tourism Expenditure vs. Tourism Income") +
xlab("Year") +
ylab("Dolar") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
p <- income_n1 %>%
ggplot(aes(Tourism_expenditure_in_ThousandDollars, Tourism_Income_in_ThousandDollars, size = Number_of_Departing_Visitors, color = Year)) +
geom_point() +
theme_bw()+
ggtitle("Tourism Expenditure vs. Tourism Income") +
xlab("Tourism Expenditure in Thousand Dollars") +
ylab("Tourism Income in Thousand Dollars") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6)) +
scale_x_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplotly(p)
residence <- read_excel("term_project/melted_depart_by_residence.xlsx")
ggplot( residence, aes(x = Dep_Year, y = Departing_Visitors, group= Nationality, fill = Nationality)) +
geom_area()+
scale_fill_viridis(discrete = TRUE) +
theme(legend.position = "none") +
ggtitle("Visitor's Nationality over the years") +
xlab("Year") +
ylab("Numver of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6)) +
theme_ipsum() +
theme(
legend.position = "none",
panel.spacing = unit(0, "lines"),
strip.text.x = element_text(size = 5),
plot.title = element_text(size = 12)
) +
facet_wrap(~Nationality, scales = "free_y")
residence_2 <- filter(residence, Dep_Year %in% c("2019", "2020" , "2021", "2022" ) )
ggplot( residence_2, aes(x = Dep_Year, y = Departing_Visitors, group= Nationality, fill = Nationality)) +
geom_area()+
scale_fill_viridis(discrete = TRUE) +
theme(legend.position = "none") +
ggtitle("Visitor's Nationality over the years") +
xlab("Year") +
ylab("Numver of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6)) +
theme_ipsum() +
theme(
legend.position = "none",
panel.spacing = unit(0, "lines"),
strip.text.x = element_text(size = 5),
plot.title = element_text(size = 12)
) +
facet_wrap(~Nationality, scales = "free_y")
reasons_to_come <- read_excel("term_project/purposes.xlsx")
reasons_2 <- filter(reasons_to_come, Quarter %in% c("I", "II", "III", "IV"))
ggplot(reasons_2, aes(x = Year, y= ALL_Total, fill = Quarter)) + geom_bar(stat = "identity", position = "dodge") +
ggtitle("Total Visitors by Quarter/Year") +
xlab("Year") +
ylab("Total Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
reasons_1 <- filter(reasons_to_come, Quarter %in% "Annual")
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Health_or_medical_reasons, colour = "Health or Medical Reasons"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Travel_entertainment_sportive_or_cultural_activities, colour = "Cultural Activites"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Visiting_relatives_and_friends, colour = "Family and Friends Visiting"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Education_training, colour = "Education Purpose"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Religion_Pilgrimag, colour = "Religion Purposes"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Shoppin, colour = "Shopping Purposes"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Business, colour = "Business Purposes"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Other, colour = "Other Reasons"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = TR_Total, colour = "TR Total Activities"))
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape2)
library(plotly)
library(gapminder)
library(scales)
library(hrbrthemes)
library(viridis)
library(wordcloud2)
library(readxl)
income_nights <- read_excel("term_project/income_nights.xlsx")
income_months <- read_excel("term_project/income_months.xlsx")
income_n1 <- filter(income_nights, Quarter %in% c("Anual"))
ggplot(income_n1, aes(x = Year, y= Number_of_Departing_Visitors, fill = Number_of_Departing_Visitors, ))+
geom_col(width = 0.5) + theme(axis.text.x = element_text(angle = 50, hjust = 2))+
ggtitle("Number of Departing Visitors by Year") +
xlab("Year") + ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
income_m1 <- filter(income_months, Months %in% c("January", "February", "March", "April", "May", "June", "July", "August","September","October","November","December"))
ggplot(income_m1, aes(x = Months, y = Number_of_Visitors_2020, fill= Number_of_Visitors_2020)) +
ggtitle("Number of Departing Visitors by Month in 2020") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_m1, aes(x = Months, y = Number_of_Visitors_2021, fill= Number_of_Visitors_2021)) +
ggtitle("Number of Departing Visitors by Month in 2021") +
xlab("Months") +
ylab("Number of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplot(income_n1, aes(Year)) +
geom_line(aes(y = Tourism_expenditure_in_ThousandDollars, colour = "Tourism expenditure in Thousand Dollars")) +
geom_line(aes(y = Tourism_Income_in_ThousandDollars, colour = "Tourism Income in Thousand Dollars")) +
ggtitle("Tourism Expenditure vs. Tourism Income") +
xlab("Year") +
ylab("Dolar") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
p <- income_n1 %>%
ggplot(aes(Tourism_expenditure_in_ThousandDollars, Tourism_Income_in_ThousandDollars, size = Number_of_Departing_Visitors, color = Year)) +
geom_point() +
theme_bw()+
ggtitle("Tourism Expenditure vs. Tourism Income") +
xlab("Tourism Expenditure in Thousand Dollars") +
ylab("Tourism Income in Thousand Dollars") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6)) +
scale_x_continuous(labels = label_number(suffix = "M", scale = 1e-6))
ggplotly(p)
residence <- read_excel("term_project/melted_depart_by_residence.xlsx")
ggplot( residence, aes(x = Dep_Year, y = Departing_Visitors, group= Nationality, fill = Nationality)) +
geom_area()+
scale_fill_viridis(discrete = TRUE) +
theme(legend.position = "none") +
ggtitle("Visitor's Nationality over the years") +
xlab("Year") +
ylab("Numver of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6)) +
theme_ipsum() +
theme(
legend.position = "none",
panel.spacing = unit(0, "lines"),
strip.text.x = element_text(size = 5),
plot.title = element_text(size = 12)
) +
facet_wrap(~Nationality, scales = "free_y")
residence_2 <- filter(residence, Dep_Year %in% c("2019", "2020" , "2021", "2022" ) )
ggplot( residence_2, aes(x = Dep_Year, y = Departing_Visitors, group= Nationality, fill = Nationality)) +
geom_area()+
scale_fill_viridis(discrete = TRUE) +
theme(legend.position = "none") +
ggtitle("Visitor's Nationality over the years") +
xlab("Year") +
ylab("Numver of Departing Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6)) +
theme_ipsum() +
theme(
legend.position = "none",
panel.spacing = unit(0, "lines"),
strip.text.x = element_text(size = 5),
plot.title = element_text(size = 12)
) +
facet_wrap(~Nationality, scales = "free_y")
reasons_to_come <- read_excel("term_project/purposes.xlsx")
reasons_2 <- filter(reasons_to_come, Quarter %in% c("I", "II", "III", "IV"))
ggplot(reasons_2, aes(x = Year, y= ALL_Total, fill = Quarter)) + geom_bar(stat = "identity", position = "dodge") +
ggtitle("Total Visitors by Quarter/Year") +
xlab("Year") +
ylab("Total Visitors") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6))
reasons_1 <- filter(reasons_to_come, Quarter %in% "Annual")
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Health_or_medical_reasons, colour = "Health or Medical Reasons"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Travel_entertainment_sportive_or_cultural_activities, colour = "Cultural Activites"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Visiting_relatives_and_friends, colour = "Family and Friends Visiting"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Education_training, colour = "Education Purpose"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Religion_Pilgrimag, colour = "Religion Purposes"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Shoppin, colour = "Shopping Purposes"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Business, colour = "Business Purposes"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = ALL_Other, colour = "Other Reasons"))
ggplot(reasons_1, aes(Year)) +
geom_line(aes(y = ALL_Total, colour = "Total Touristic Activities")) +
geom_line(aes(y = TR_Total, colour = "TR Total Activities"))
library(streamgraph)
install.packages("streamgraph")
library(streamgraph)
install.packages("streamgraph")
